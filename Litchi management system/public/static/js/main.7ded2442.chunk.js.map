{"version":3,"sources":["api/ajax.js","api/index.js","redux/actions-type.js","utils/storage.js","redux/action.js","containers/login/login.jsx","config/menuConfig.js","components/left-nav/left-nav.js","components/header/header.jsx","containers/home/line.jsx","containers/home/bar.jsx","containers/home/home.jsx","containers/chats/bar.jsx","containers/chats/line.jsx","containers/chats/pie.jsx","components/link-button/link-button.jsx","utils/constants.js","containers/product/home.jsx","containers/product/detail.jsx","containers/product/pictures-wall.jsx","containers/product/rich-text-editor.jsx","containers/product/addupdateitem.jsx","containers/product/product.jsx","utils/index.js","containers/role/role.jsx","containers/user/user.jsx","containers/category/addcategory.jsx","containers/category/updatecategory.jsx","containers/category/category.jsx","containers/admin/admin.jsx","redux/reducers.js","redux/store.js","App.js","index.js"],"names":["ajax","url","data","method","Promise","resolve","reject","axios","get","params","post","then","response","catch","error","message","reqLogin","username","password","reqCategories","parentId","reqAddCategory","categoryName","reqUpdateCategory","categoryId","reqProducts","pageNum","pageSize","reqSearchProducts","searchType","searchName","reqCategory","requpdateStatus","productId","status","reqDeleteImg","name","reqAddProduct","pCategoryId","desc","price","detail","imgs","reqUpdateProduct","_id","reqAddRole","roleName","reqRoleList","reqUpdateRole","menus","auth_time","auth_name","reqUserList","reqAddOrUpdateUser","user","reqDelUser","userId","AUTH_SUCCESS","ERROR_MSG","RECEIVE_USER","RESET_USER","RECEIVE_WHEATHER","RECEIVE_CATEGORYS","ADDCATEGORY_SUCCESS","UPDATECATEGORY_SUCCESS","RECEIVE_PRODUCTS","ADDPRODUCT_SUCCESS","UPDATEPRODUCT_SUCCESS","RECEIVE_ROLE_LIST","RECEIVE_USER_LIST","saveUser","store","set","getUser","removeUser","remove","errorMsg","msg","type","receiveProducts","products","receiveRoleList","roleList","receiveUserList","userList","getCategories","dispatch","a","async","result","getaddCategory","getRoleList","Login","handlSubmit","event","preventDefault","props","form","validateFields","err","values","console","log","login","validatorPwd","rule","value","callback","length","test","this","history","replace","getFieldDecorator","to","path","className","align","justify","span","onSubmit","Item","rules","required","whitespace","min","max","pattern","size","placeholder","validator","htmlType","shape","Component","Wraplogin","create","connect","state","storage","menuList","title","key","icon","children","Sider","SubMenu","LeftNav","collapsed","onCollapse","setState","getMenuNodes","map","item","hasAuth","location","pathname","find","cItem","indexOf","openKey","isPublic","role","child","menuNodes","collapsible","theme","selectedKeys","defaultOpenKeys","mode","withRouter","Header","Head","visible","handleOk","Cookies","handleCancel","showModal","getTitle","forEach","onClick","onOk","onCancel","centered","mask","Line","dv","DataSet","createView","source","month","b","c","transform","fields","style","float","width","height","scale","range","forceFit","label","formatter","val","crosshairs","position","color","stroke","lineWidth","React","Bar","marginLeft","year","sales","tickInterval","RangePicker","Home","isVisited","handleChange","extra","headStyle","suffix","fontWeight","valueStyle","fontSize","prefix","defaultValue","moment","format","bodyStyle","padding","inventorys","getOption","text","tooltip","legend","xAxis","yAxis","series","option","Pie","backgroundColor","left","top","textStyle","trigger","visualMap","show","inRange","colorLightness","radius","center","sort","roseType","labelLine","lineStyle","smooth","length2","itemStyle","shadowBlur","shadowColor","animationType","animationEasing","animationDelay","idx","Math","random","LinkButton","PAGESIZE","BASE_IMG_URL","Option","current","changePage","page","getProducts","columns","dataIndex","render","product","newState","getUpdateStatus","push","initpageNum","undefined","onChange","margin","target","loading","list","total","dataSource","rowKey","pagination","defaultPageSize","showQuickJumper","success","Detail","categoryName1","categoryName2","all","results","goBack","img","src","alt","dangerouslySetInnerHTML","__html","getBase64","file","reader","FileReader","readAsDataURL","onload","onerror","PicturesWall","previewVisible","handlePreview","preview","originFileObj","previewImage","fileList","getImgs","index","uid","uploadButton","action","accept","listType","onPreview","footer","RichTextEditor","onEditorStateChange","editorState","getDetail","draftToHtml","convertToRaw","getCurrentContent","html","contentBlock","htmlToDraft","contentState","ContentState","createFromBlockArray","contentBlocks","EditorState","createWithContent","createEmpty","editorStyle","border","minHeight","TextArea","AddUpdateItem","options","initOptions","categories","isLeaf","isUpdate","getCategorys","subcategories","chiildOptions","loadData","selectedOptions","targetOption","subCategories","childoptions","validatorPrice","submit","categoryIds","pw","editor","getUpdateProductStatus","getAaddProductStatus","createRef","labelCol","wrapperCol","initialValue","autoSize","addonAfter","ref","productStatus","Product","component","exact","formateDate","time","date","Date","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","TreeNode","Role","AddVisible","AuthVisible","roleNameValue","checkedKeys","onRow","showAddModal","handleAddRole","getAddRoleStatus","roleNameInput","e","showAuthModal","handleAuthRole","now","getUpdateRoleAuthStatus","handleAuthCancel","getTreeNode","reduce","pre","onCheck","create_time","treeNodes","roles","disabled","rowSelection","selectedRowKeys","cancelText","okText","checkable","defaultExpandAll","User","addupdatevisible","delvisible","handleAddBtn","isAddOrUpdate","rowData","handleUpdateBtn","handleDeleteBtn","AddOrUpdateUser","getAddOrUpdateStatus","resetFields","deleteUser","getDelUserStatus","role_id","users","getUserList","phone","len","email","AddCategory","getItemsValue","getFieldsValue","parentName","WrappedAddCategory","UpdateCategory","Category","getSubcategory","showAddCategory","showUpdateCategory","handleCreate","formRef","handleUpdate","getUpdateCategory","bordered","defaultSortOrder","addCategory","wrappedComponentRef","Content","Footer","Admin","getUserMessage","weather","background","textAlign","code","initproducts","pages","combineReducers","addsuccessmsg","updatesuccessmsg","createStore","reducers","composeWithDevTools","applyMiddleware","thunk","App","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.7ded2442.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nimport { message } from \"antd\";\r\nexport default function ajax(url, data = {}, method = \"GET\") {\r\n  return new Promise(function(resolve, reject) {\r\n    let promise;\r\n    // 执行异步 ajax 请求\r\n    if (method === \"GET\") {\r\n      promise = axios.get(url, { params: data }); // params 配置指定的是 query 参数\r\n    } else {\r\n      promise = axios.post(url, data);\r\n    }\r\n    promise\r\n      .then(response => {\r\n        // 如果成功了, 调用 resolve(response.data)\r\n        resolve(response.data);\r\n      })\r\n      .catch(error => {\r\n        // 对所有 ajax 请求出错做统一处理, 外层就不用再处理错误了\r\n        // 如果失败了, 提示请求后台出错\r\n        message.error(\"请求错误: \" + error.message);\r\n      });\r\n  });\r\n}\r\n","import ajax from \"./ajax\";\r\n\r\n//用户登录\r\nexport const reqLogin = (username, password) =>\r\n  ajax(\"/login\", { username, password }, \"POST\");\r\n\r\n//获取用户信息\r\nexport const reqUser = () => ajax(\"/user\", \"GET\");\r\n\r\n//获取天气\r\nexport const reqWeather = () =>\r\n  ajax(\r\n    \"https://www.tianqiapi.com/api/?version=v1&cityid=101240101&appid=77551823APPID&appsecret=pmRk985U\",\r\n    \"GET\"\r\n  );\r\n\r\n//获取一级/二级分类的列表\r\nexport const reqCategories = parentId =>\r\n  ajax(\"/manage/category/list\", { parentId });\r\n\r\n//添加分类\r\nexport const reqAddCategory = ({ categoryName, parentId }) =>\r\n  ajax(\"/manage/category/add\", { categoryName, parentId }, \"POST\");\r\n\r\n//更新分类\r\nexport const reqUpdateCategory = ({ categoryId, categoryName }) =>\r\n  ajax(\"/manage/category/update\", { categoryId, categoryName }, \"POST\");\r\n\r\n//获取商品分页列表\r\nexport const reqProducts = (pageNum, pageSize) =>\r\n  ajax(\"/manage/product/list\", { pageNum, pageSize });\r\n\r\n//根据商品描述或商品名称来搜索商品分页列表\r\nexport const reqSearchProducts = (pageNum, pageSize, searchType, searchName) =>\r\n  ajax(\"/manage/product/search\", {\r\n    pageNum,\r\n    pageSize,\r\n    [searchType]: searchName\r\n  });\r\n\r\n//根据分类ID获取分类\r\nexport const reqCategory = categoryId =>\r\n  ajax(\"/manage/category/info\", { categoryId });\r\n\r\n//更新商品状态 上架/下架\r\nexport const requpdateStatus = (productId, status) =>\r\n  ajax(\"/manage/product/updateStatus\", { productId, status }, \"POST\");\r\n\r\n//删除图片\r\nexport const reqDeleteImg = name =>\r\n  ajax(\"/manage/img/delete\", { name }, \"POST\");\r\n\r\n//添加商品\r\nexport const reqAddProduct = (\r\n  categoryId,\r\n  pCategoryId,\r\n  name,\r\n  desc,\r\n  price,\r\n  detail,\r\n  imgs\r\n) =>\r\n  ajax(\r\n    \"/manage/product/add\",\r\n    { categoryId, pCategoryId, name, desc, price, detail, imgs },\r\n    \"POST\"\r\n  );\r\n//更新商品\r\nexport const reqUpdateProduct = (\r\n  _id,\r\n  categoryId,\r\n  pCategoryId,\r\n  name,\r\n  desc,\r\n  price,\r\n  detail,\r\n  imgs\r\n) =>\r\n  ajax(\r\n    \"/manage/product/update\",\r\n    { _id, categoryId, pCategoryId, name, desc, price, detail, imgs },\r\n    \"POST\"\r\n  );\r\n//添加角色\r\nexport const reqAddRole = roleName =>\r\n  ajax(\"/manage/role/add\", { roleName }, \"POST\");\r\n//获取角色列表\r\nexport const reqRoleList = () => ajax(\"/manage/role/list\");\r\n//更新角色\r\nexport const reqUpdateRole = (_id, menus, auth_time, auth_name) =>\r\n  ajax(\"/manage/role/update\", { _id, menus, auth_time, auth_name }, \"POST\");\r\n//获取用户列表\r\nexport const reqUserList = () => ajax(\"/manage/user/list\");\r\n//添加或更新用户\r\nexport const reqAddOrUpdateUser = user =>\r\n  ajax(\"/manage/user/\" + (user.password ? \"add\" : \"update\"),user,'POST');\r\n//删除用户\r\nexport const reqDelUser = (userId) => ajax(\"/manage/user/delete\" , {userId} ,\"POST\")","export const AUTH_SUCCESS = \"auth_success\"; // 登录/注册成功\r\nexport const ERROR_MSG = \"error_msg\"; //错误提示信息\r\nexport const RECEIVE_USER = \"receive_user\"; //接收用户\r\nexport const RESET_USER = \"reset_user\"; //重置用户\r\nexport const RECEIVE_WHEATHER = \"receive_wheather\"; //获取天气\r\nexport const RECEIVE_CATEGORYS = \"receive_categorys\"; //接收分类列表\r\nexport const ADDCATEGORY_SUCCESS = 'addcategory_success'  //添加商品成功\r\nexport const UPDATECATEGORY_SUCCESS = 'updatecategory_success'  //更新商品成功\r\nexport const RECEIVE_PRODUCTS = 'receive_products'  //接收商品列表\r\nexport const ADDPRODUCT_SUCCESS = 'addproduct_success' //添加商品成功\r\nexport const UPDATEPRODUCT_SUCCESS = 'updateproduct_success' //更新商品成功\r\nexport const RECEIVE_ROLE_LIST = 'receive_role_list'  //接收角色列表\r\nexport const RECEIVE_USER_LIST = 'receive_user_list'  //接收用户列表\r\n","import store from 'store'\r\nconst USER_KEY = 'user_key'\r\nexport default {\r\n    saveUser(user){\r\n        //localStorage.setItem(USER_KEY,JSON.stringify(user))\r\n        store.set(USER_KEY,user)\r\n    },\r\n    getUser(){\r\n        //return JSON.parse(localStorage.getItem(USER_KEY) || '{}')\r\n        return store.get(USER_KEY)\r\n    },\r\n    removeUser(){\r\n        //localStorage.removeItem(USER_KEY)\r\n        store.remove(USER_KEY)\r\n    }\r\n}","import {\r\n  reqLogin,\r\n  reqUser,\r\n  reqWeather,\r\n  reqCategories,\r\n  reqAddCategory,\r\n  reqUpdateCategory,\r\n  reqProducts,\r\n  reqSearchProducts,\r\n  requpdateStatus,\r\n  reqAddProduct,\r\n  reqUpdateProduct,\r\n  reqRoleList,\r\n  reqAddRole,\r\n  reqUpdateRole,\r\n  reqUserList,\r\n  reqAddOrUpdateUser,\r\n  reqDelUser\r\n} from \"../api/index\";\r\nimport {\r\n  AUTH_SUCCESS,\r\n  ERROR_MSG,\r\n  RECEIVE_USER,\r\n  RESET_USER,\r\n  RECEIVE_WHEATHER,\r\n  RECEIVE_CATEGORYS,\r\n  ADDCATEGORY_SUCCESS,\r\n  UPDATECATEGORY_SUCCESS,\r\n  RECEIVE_PRODUCTS,\r\n  ADDPRODUCT_SUCCESS,\r\n  UPDATEPRODUCT_SUCCESS,\r\n  RECEIVE_ROLE_LIST,\r\n  RECEIVE_USER_LIST,\r\n} from \"./actions-type\";\r\n\r\nimport { message } from \"antd\";\r\n\r\nimport storage from '../utils/storage'\r\n//授权成功的同步action\r\nconst anthSucess = user => ({ type: AUTH_SUCCESS, data: user });\r\n//错误提示信息的同步action\r\nconst errorMsg = msg => ({ type: ERROR_MSG, data: msg });\r\n//获取user信息的同步action\r\nconst receiveUser = user => ({ type: RECEIVE_USER, data: user });\r\n//重置用户的同步action\r\nconst resetUser = msg => ({ type: RESET_USER, data: msg });\r\n//获取天气的同步action\r\nconst receiveWheather = weather => ({ type: RECEIVE_WHEATHER, data: weather });\r\n//接收商品分类的同步action\r\nconst receiveCategorys = categorys => ({\r\n  type: RECEIVE_CATEGORYS,\r\n  data: categorys\r\n});\r\n//接收添加成功分类数据\r\nconst addCategorySuccess = category => ({\r\n  type: ADDCATEGORY_SUCCESS,\r\n  data: category\r\n});\r\n//接收更新成功分类数据\r\nconst updateCategorySuccess = category => ({\r\n  type: UPDATECATEGORY_SUCCESS,\r\n  data: category\r\n});\r\n//接收分页商品数据\r\nconst receiveProducts = products => ({\r\n  type: RECEIVE_PRODUCTS,\r\n  data: products\r\n});\r\n//添加商品成功status\r\nconst addProductSuccess = status => ({\r\n  type: ADDPRODUCT_SUCCESS,\r\n  data: status\r\n});\r\n//更新商品成功status\r\nconst updateProductSuccess = status => ({\r\n  type: UPDATEPRODUCT_SUCCESS,\r\n  data: status\r\n});\r\n//接收角色列表\r\nconst receiveRoleList = roleList => ({\r\n  type: RECEIVE_ROLE_LIST,\r\n  data: roleList\r\n});\r\n//接收用户列表\r\nconst receiveUserList = userList => ({\r\n  type: RECEIVE_USER_LIST,\r\n  data: userList\r\n});\r\n/* ---------------------------------------------------------------------------------------------- */\r\n\r\n//登录异步action\r\nexport const login = (username, password) => {\r\n  //debugger\r\n  if (!username) {\r\n    return errorMsg(\"必须填写用户名\");\r\n  } else if (!password) {\r\n    return errorMsg(\"密码错误\");\r\n  }\r\n  return async dispatch => {\r\n    //debugger\r\n    const response = await reqLogin(username, password);\r\n    //debugger\r\n    //const result = response.data\r\n    //console.log(response)\r\n    if (response.status === 0) {\r\n      storage.saveUser(response.data)\r\n      dispatch(anthSucess(response));\r\n      //console.log(result)\r\n    } else {\r\n      dispatch(errorMsg(response));\r\n    }\r\n  };\r\n};\r\n\r\nexport const getUserMessage = () => {\r\n  return async dispatch => {\r\n    const response = await reqUser();\r\n    //const result = response.data\r\n    //debugger\r\n    if (response.code === 0) {\r\n      dispatch(receiveUser(response.data));\r\n    } else {\r\n      message.error('error')\r\n    }\r\n  };\r\n};\r\n//获取天气异步action\r\nexport const getWeather = () => {\r\n  return async dispatch => {\r\n    const response = await reqWeather();\r\n    if (response.cityid) {\r\n      dispatch(receiveWheather(response.data[0]));\r\n    }\r\n  };\r\n};\r\n\r\n//获取一级分类异步action\r\nexport const getCategories = parentId => {\r\n  return async dispatch => {\r\n    //debugger\r\n\r\n    const response = await reqCategories(parentId);\r\n    const result = response.data;\r\n    if (response.status === 0) {\r\n      dispatch(receiveCategorys(result));\r\n    }\r\n  };\r\n};\r\n//获取添加分类信息\r\nexport const getaddCategory = ({ parentId, categoryName }) => {\r\n  return async dispatch => {\r\n    const response = await reqAddCategory({ parentId, categoryName });\r\n    if (response.status === 0) {\r\n      dispatch(addCategorySuccess(response));\r\n    }\r\n  };\r\n};\r\n\r\n//获取更新分类信息\r\nexport const getUpdateCategory = ({ categoryId, categoryName }) => {\r\n  return async dispatch => {\r\n    const response = await reqUpdateCategory({ categoryId, categoryName });\r\n    if (response.status === 0) {\r\n      dispatch(updateCategorySuccess(response));\r\n    }\r\n  };\r\n};\r\n\r\n//获取分页商品列表\r\n\r\nexport const getProducts = (pageNum, pageSize, searchType, searchName) => {\r\n  //getProducts可以获取全部商品也可以按类型获取商品\r\n  //debugger\r\n  return async dispatch => {\r\n    let response;\r\n    //如果有搜索的内容，则按名称或描述来搜索获取商品列表，反之显示所有\r\n    if (searchName) {\r\n      //reqSearchProducts这个接口需要四个值：页码，页数，搜索类型(商品名称/商品描述),搜索内容\r\n      response = await reqSearchProducts(\r\n        pageNum,\r\n        pageSize,\r\n        searchType,\r\n        searchName\r\n      );\r\n    } else {\r\n      //reqProducts这个接口则根据页码和页数来显示所有商品内容\r\n      response = await reqProducts(pageNum, pageSize);\r\n    }\r\n    if (response.status === 0) {\r\n      dispatch(receiveProducts(response));\r\n    }\r\n  };\r\n};\r\n//pageNum = 1默认值为1，否则在第一页进行上架或下架操作就会出现因为没有指定pageNum而获取不到数据\r\nexport const getUpdateStatus = (productId, status, pageNum = 1, pageSize) => {\r\n  //debugger\r\n  return async dispatch => {\r\n    const response = await requpdateStatus(productId, status);\r\n    if (response.status === 0) {\r\n      const response = await reqProducts(pageNum, pageSize);\r\n      if (response.status === 0) {\r\n        dispatch(receiveProducts(response));\r\n        message.success(\"更改成功\");\r\n      }\r\n    }\r\n  };\r\n};\r\n\r\n//获取添加商品成功状态\r\nexport const getAaddProductStatus = (\r\n  categoryId,\r\n  pCategoryId,\r\n  name,\r\n  desc,\r\n  price,\r\n  detail,\r\n  imgs\r\n) => {\r\n  return async dispatch => {\r\n    const response = await reqAddProduct(\r\n      categoryId,\r\n      pCategoryId,\r\n      name,\r\n      desc,\r\n      price,\r\n      detail,\r\n      imgs\r\n    );\r\n    if (response.status === 0) {\r\n      dispatch(addProductSuccess(response.status));\r\n      message.success(\"添加商品成功\");\r\n    } else {\r\n      message.error(\"添加商品失败\");\r\n    }\r\n  };\r\n};\r\n\r\n//获取更新商品成功状态\r\nexport const getUpdateProductStatus = (\r\n  _id,\r\n  categoryId,\r\n  pCategoryId,\r\n  name,\r\n  desc,\r\n  price,\r\n  detail,\r\n  imgs\r\n) => {\r\n  return async dispatch => {\r\n    const response = await reqUpdateProduct(\r\n      _id,\r\n      categoryId,\r\n      pCategoryId,\r\n      name,\r\n      desc,\r\n      price,\r\n      detail,\r\n      imgs\r\n    );\r\n    if (response.status === 0) {\r\n      dispatch(updateProductSuccess(response.status));\r\n      message.success(\"修改商品成功\");\r\n    } else {\r\n      message.error(\"修改商品失败\");\r\n    }\r\n  };\r\n};\r\n\r\n//获取角色列表\r\nexport const getRoleList = () => {\r\n  return async dispatch => {\r\n    const response = await reqRoleList();\r\n    if (response.status === 0) {\r\n      dispatch(receiveRoleList(response.data));\r\n    } else {\r\n      message.error(\"获取失败\");\r\n    }\r\n  };\r\n};\r\n\r\n//添加角色\r\nexport const getAddRoleStatus = roleName => {\r\n  return async dispatch => {\r\n    const response = await reqAddRole(roleName);\r\n    if (response.status === 0) {\r\n      message.success(\"添加角色成功\");\r\n      const result = await reqRoleList();\r\n      if (result.status === 0) {\r\n        dispatch(receiveRoleList(result.data));\r\n      } else {\r\n        message.error(\"获取角色列表失败\");\r\n      }\r\n    }\r\n  };\r\n};\r\n\r\n//更新角色权限\r\nexport const getUpdateRoleAuthStatus = (_id, menus, auth_time, auth_name) => {\r\n  return async dispatch => {\r\n    const response = await reqUpdateRole(_id, menus, auth_time, auth_name);\r\n    if (response.status === 0) {\r\n      message.success(\"修改角色权限成功，请重新登录！\");\r\n      const result = await reqRoleList();\r\n      if (result.status === 0) {\r\n        dispatch(receiveRoleList(result.data));\r\n      } else {\r\n        message.error(\"获取角色列表失败\");\r\n      }\r\n    }\r\n  };\r\n};\r\n//获取用户列表\r\nexport const getUserList = () => {\r\n  return async dispatch => {\r\n    const response = await reqUserList()\r\n    if(response.status === 0 ){\r\n      dispatch(receiveUserList(response.data))\r\n    }\r\n  }\r\n}\r\n\r\nexport const getAddOrUpdateStatus = (user) => {\r\n  return async dispatch => {\r\n    const response = await reqAddOrUpdateUser(user)\r\n    if(response.status === 0 ){\r\n      message.success(\"操作成功\");\r\n      const response = await reqUserList()\r\n      if(response.status === 0 ){\r\n        dispatch(receiveUserList(response.data))\r\n      }\r\n    } else {\r\n      message.error(response.msg);\r\n    }\r\n  }\r\n}\r\n\r\nexport const getDelUserStatus = (userId) => {\r\n  return async dispatch => {\r\n    const response = await reqDelUser(userId)\r\n    if(response.status === 0 ){\r\n      message.success(\"删除成功\");\r\n      const response = await reqUserList()\r\n      if(response.status === 0 ){\r\n        dispatch(receiveUserList(response.data))\r\n      }\r\n    } else {\r\n      message.error(response.msg);\r\n    }\r\n  }\r\n}\r\n","import React ,{Component} from 'react'\r\nimport {Input,Row,Col, Button,Icon,Form} from 'antd'\r\nimport {connect} from 'react-redux'\r\nimport {Redirect} from 'react-router-dom'\r\n\r\nimport {login} from '../../redux/action'\r\nimport './login.less'\r\n\r\n class Login extends Component{\r\n    componentDidMount(){\r\n        const {user} = this.props\r\n        //console.log(user)\r\n        if(user.status === 0){\r\n            \r\n            this.props.history.replace('/')\r\n        }\r\n    }\r\n    handlSubmit = (event) => {\r\n        event.preventDefault();\r\n        this.props.form.validateFields((err, values) => {\r\n            if (!err) {\r\n                const {username,password} = values\r\n                this.props.login(username,password)\r\n                //message.success('连接成功')\r\n            } else{\r\n                console.log('校验失败')\r\n            }\r\n          });\r\n    }\r\n\r\n    validatorPwd = (rule, value, callback) => {\r\n        if(!value){\r\n            callback('必须填写密码')\r\n        } else if(value.length < 4){\r\n            callback('密码必须大于等于4位')\r\n        } else if(value.length > 12){\r\n            callback('密码必须大于等于12位')\r\n        } else if (!/^[a-zA-Z0-9_]+$/.test(value)){\r\n            callback('密码必须是字母或数字或下划线组成!')\r\n        } else {\r\n            callback()\r\n        }\r\n    }\r\n    render(){\r\n        \r\n        const form = this.props.form\r\n        const {getFieldDecorator} = form\r\n        const {user} = this.props\r\n        if(user){\r\n            if(user.status === 0){\r\n                return <Redirect to={this.props.user.path} />\r\n            }\r\n        }\r\n       \r\n        return(\r\n            <div className=\"login\">\r\n                <Row type=\"flex\" align=\"middle\" justify=\"space-around\">\r\n                    <Col type=\"flex\" align=\"left\"  className=\"form\" span={6}>\r\n                        <Form onSubmit={this.handlSubmit}>\r\n                            <h1 className=\"login_text\">Login</h1>\r\n                            <Form.Item>\r\n                                {\r\n                                    getFieldDecorator('username',{\r\n                                        rules:[\r\n                                            { required: true, whitespace:true, message: '必须填写!' },\r\n                                            { whitespace:true, message: '不能有空格！' },\r\n                                            { min: 4, message: '最小四位！' },\r\n                                            { max: 12, message: '最长12位!' },\r\n                                            { pattern:/^[a-zA-Z0-9_]+$/, message: '必须是字母或数字或下划线!' },\r\n                                        ]\r\n                                    })(\r\n                                        <Input className=\"Input\"  size=\"large\"  placeholder=\"用户名\"  />\r\n                                    )\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item>\r\n                                {\r\n                                    getFieldDecorator('password',{\r\n                                        rules:[{\r\n                                            validator:this.validatorPwd\r\n                                        }]\r\n                                    })(\r\n                                        <Input className=\"Input\" size=\"large\"  type=\"password\"  placeholder=\"密码\" />\r\n                                    )\r\n                                }\r\n                            </Form.Item>\r\n                            <Form.Item>\r\n                                <Button htmlType=\"submit\" className=\"Button\" type=\"default\" size=\"large\" shape=\"round\"><Icon type=\"login\" />登录</Button>\r\n                            </Form.Item>\r\n                           { user.status === 1 ? <span className=\"errorMsg\">{user.msg}</span> : null}\r\n                        </Form>\r\n                        \r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst Wraplogin = Form.create()(Login)\r\nexport default connect(\r\n    state => ({user:state.user}),\r\n    {login}\r\n)(Wraplogin)","const menuList = [\r\n  {\r\n    title: \"首页\", // 菜单标题名称\r\n    key: \"/home\", // 对应的 path\r\n    icon: \"home\" // 图标名称\r\n  },\r\n  {\r\n    title: \"商品\",\r\n    key: \"/products\",\r\n    icon: \"appstore\",\r\n    children: [\r\n      // 子菜单列表\r\n      {\r\n        title: \"品类管理\",\r\n        key: \"/category\",\r\n        icon: \"bars\"\r\n      },\r\n      {\r\n        title: \"商品管理\",\r\n        key: \"/product\",\r\n        icon: \"tool\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    title: \"用户管理\",\r\n    key: \"/user\",\r\n    icon: \"user\"\r\n  },\r\n  {\r\n    title: \"角色管理\",\r\n    key: \"/role\",\r\n    icon: \"safety\"\r\n  },\r\n  {\r\n    title: \"图形图表\",\r\n    key: \"/charts\",\r\n    icon: \"area-chart\",\r\n    children: [\r\n      {\r\n        title: \"柱形图\",\r\n        key: \"/charts/bar\",\r\n        icon: \"bar-chart\"\r\n      },\r\n      {\r\n        title: \"折线图\",\r\n        key: \"/charts/line\",\r\n        icon: \"line-chart\"\r\n      },\r\n      {\r\n        title: \"饼图\",\r\n        key: \"/charts/pie\",\r\n        icon: \"pie-chart\"\r\n      }\r\n    ]\r\n  }\r\n];\r\nexport default menuList;\r\n","import React, { Component } from \"react\";\r\nimport { Layout, Menu, Icon } from \"antd\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\n\r\nimport menuList from \"../../config/menuConfig\";\r\nimport storage from \"../../utils/storage\";\r\nconst { Sider } = Layout;\r\nconst { SubMenu } = Menu;\r\n\r\nclass LeftNav extends Component {\r\n  state = {\r\n    collapsed: false\r\n  };\r\n  UNSAFE_componentWillMount() {\r\n    this.menuNodes = this.getMenuNodes(menuList);\r\n  }\r\n  onCollapse = collapsed => {\r\n    this.setState({ collapsed });\r\n  };\r\n\r\n  //根据menu的数据数组生成对应的标签数组  map()+递归调用\r\n  getMenuNodes = menuList => {\r\n    return menuList.map(item => {\r\n      if (this.hasAuth(item)) {\r\n        if (!item.children) {\r\n          return (\r\n            <Menu.Item key={item.key}>\r\n              <Link to={item.key}>\r\n                <Icon type={item.icon} />\r\n                <span>{item.title}</span>\r\n              </Link>\r\n            </Menu.Item>\r\n          );\r\n        } else {\r\n          const path = this.props.location.pathname;\r\n          const cItem = item.children.find(\r\n            cItem => path.indexOf(cItem.key) === 0\r\n          );\r\n          if (cItem) {\r\n            this.openKey = item.key;\r\n          }\r\n          return (\r\n            <SubMenu\r\n              key={item.key}\r\n              title={\r\n                <span>\r\n                  <Icon type={item.icon} />\r\n                  <span>{item.title}</span>\r\n                </span>\r\n              }\r\n            >\r\n              {this.getMenuNodes(item.children)}\r\n            </SubMenu>\r\n          );\r\n        }\r\n      }\r\n    });\r\n  };\r\n  hasAuth = item => {\r\n    const { key, isPublic } = item;\r\n\r\n    const menus = storage.getUser().role.menus;\r\n    const username = storage.getUser().username;\r\n    /*\r\n    1. 如果当前用户是admin\r\n    2. 如果当前item是公开的\r\n    3. 当前用户有此item的权限: key有没有menus中\r\n     */\r\n    if (username === \"admin\" || isPublic || menus.indexOf(key) !== -1) {\r\n      return true;\r\n    } else if (item.children) {\r\n      // 4. 如果当前用户有此item的某个子item的权限\r\n      return !!item.children.find(child => menus.indexOf(child.key) !== -1);\r\n    }\r\n\r\n    return false;\r\n  };\r\n\r\n  render() {\r\n    //console.log(storage.getUser());\r\n    let path = this.props.location.pathname;\r\n    if (path.indexOf(\"/product\") === 0) {\r\n      path = \"/product\";\r\n    }\r\n    const { openKey } = this;\r\n    //console.log(typeof(path));\r\n\r\n    return (\r\n      <Sider\r\n        collapsible\r\n        collapsed={this.state.collapsed}\r\n        onCollapse={this.onCollapse}\r\n      >\r\n        <div className=\"logo\" />\r\n        <Menu\r\n          theme=\"dark\"\r\n          selectedKeys={[path]}\r\n          defaultOpenKeys={[openKey]}\r\n          mode=\"inline\"\r\n        >\r\n          {this.menuNodes}\r\n        </Menu>\r\n      </Sider>\r\n    );\r\n  }\r\n}\r\nexport default withRouter(LeftNav);\r\n","import React, { Component } from 'react';\r\nimport Cookies from 'js-cookie';\r\nimport {withRouter} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport {Layout,Modal,Button} from 'antd';\r\n\r\nimport './index.less'\r\nimport menuList  from '../../config/menuConfig'\r\nconst { Header } = Layout;\r\nclass Head extends Component {\r\n  state = {\r\n      visible: false\r\n  };\r\n  handleOk = () => {\r\n      Cookies.remove('userid')\r\n      this.props.history.replace('/login')\r\n      this.setState({\r\n        visible: false,\r\n      });\r\n    };\r\n  handleCancel = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n  showModal = () => {   //退出对话框\r\n    this.setState({\r\n      visible: true,\r\n    });\r\n  };\r\n  getTitle = () => {\r\n    const path = this.props.history.location.pathname   //当前路径\r\n    let title\r\n    menuList.forEach(item => {\r\n      if(item.key === path){\r\n        title = item.title\r\n      } else if(item.children){\r\n        const cItem = item.children.find(cItem => path.indexOf(cItem.key) === 0)\r\n        if(cItem){\r\n          title = cItem.title\r\n        }\r\n      }\r\n    })\r\n    return title\r\n  }\r\n  render() {\r\n      //天气调试接口出错了暂时用不了，如果解开注释会导致head不显示\r\n      const {user} = this.props\r\n      //const {weather} = this.props\r\n      // if(user === undefined){\r\n      //     return null\r\n      // }\r\n      //console.log(weather);\r\n      // const {wea,wea_img,date} = weather\r\n      const title = this.getTitle()\r\n      //console.log(title);\r\n      \r\n      return (\r\n          <Header className=\"header\">\r\n              <div className=\"header-top\">\r\n                  <span>\r\n                    欢迎{user.username}\r\n                  </span>\r\n                  &nbsp;&nbsp;&nbsp;\r\n                  <Button className=\"logout\"  type=\"danger\" onClick={this.showModal}>退出</Button>\r\n              </div>\r\n              <hr/>\r\n              <div className=\"header-bottom\">\r\n                  <div className=\"header-bottom-left\">{title}</div>\r\n                  {/* <div className=\"header-bottom-right\">\r\n                      <span>{date}</span>\r\n                      <img src={require(`../../assets/imges/weather/${wea_img}.png`)} alt=\"\"/>\r\n                      <span>{wea}</span>\r\n                  </div> */}\r\n              </div>\r\n\r\n              <Modal\r\n                  visible={this.state.visible}\r\n                  onOk={this.handleOk}\r\n                  onCancel={this.handleCancel}\r\n                  centered={true}\r\n                  mask={true}  \r\n              >\r\n              <h1>确定要退出登陆吗</h1>\r\n            </Modal>\r\n          </Header>\r\n          \r\n      );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n    state => ({user:state.user})\r\n)(withRouter(Head)) ","import React from \"react\";\r\nimport { Chart, Geom, Axis, Tooltip, Legend } from \"bizcharts\";\r\nimport DataSet from \"@antv/data-set\";\r\nexport default class Line extends React.Component {\r\n  render() {\r\n    const data = [\r\n      {\r\n        month: \"Jan\",\r\n        a: 7.0,\r\n        b: 3.9,\r\n        c: 5.9\r\n      },\r\n      {\r\n        month: \"Feb\",\r\n        a: 6.9,\r\n        b: 4.2,\r\n        c: 1.9\r\n      },\r\n      {\r\n        month: \"Mar\",\r\n        a: 9.5,\r\n        b: 5.7,\r\n        c: 3.9\r\n      },\r\n      {\r\n        month: \"Apr\",\r\n        a: 14.5,\r\n        b: 8.5,\r\n        c: 5.5\r\n      },\r\n      {\r\n        month: \"May\",\r\n        a: 18.4,\r\n        b: 11.9,\r\n        c: 8.9\r\n      },\r\n      {\r\n        month: \"Jun\",\r\n        a: 21.5,\r\n        b: 15.2,\r\n        c: 10.0\r\n      },\r\n      {\r\n        month: \"Jul\",\r\n        a: 25.2,\r\n        b: 17.0,\r\n        c: 12.9\r\n      },\r\n      {\r\n        month: \"Aug\",\r\n        a: 26.5,\r\n        b: 16.6,\r\n        c: 15.9\r\n      },\r\n      {\r\n        month: \"Sep\",\r\n        a: 23.3,\r\n        b: 14.2,\r\n        c: 20.7\r\n      },\r\n      {\r\n        month: \"Oct\",\r\n        a: 18.3,\r\n        b: 10.3,\r\n        c: 25.9\r\n      },\r\n      {\r\n        month: \"Nov\",\r\n        a: 13.9,\r\n        b: 6.6,\r\n        c: 30.9\r\n      },\r\n      {\r\n        month: \"Dec\",\r\n        a: 9.6,\r\n        b: 4.8,\r\n        c: 35.9\r\n      }\r\n    ];\r\n    const ds = new DataSet();\r\n    const dv = ds.createView().source(data);\r\n    dv.transform({\r\n      type: \"fold\",\r\n      fields: [\"a\", \"b\", \"c\"],\r\n      // 展开字段集\r\n      key: \"city\",\r\n      // key 字段\r\n      value: \"temperature\" // value 字段\r\n    });\r\n    const cols = {\r\n      month: {\r\n        range: [0, 1]\r\n      }\r\n    };\r\n    return (\r\n      <div style={{ float: \"right\", width: 750, height: 300 }}>\r\n        <Chart height={250} data={dv} scale={cols} forceFit>\r\n          <Legend />\r\n          <Axis name=\"month\" />\r\n          <Axis\r\n            name=\"temperature\"\r\n            label={{\r\n              formatter: val => `${val}万个`\r\n            }}\r\n          />\r\n          <Tooltip\r\n            crosshairs={{\r\n              type: \"y\"\r\n            }}\r\n          />\r\n          <Geom\r\n            type=\"line\"\r\n            position=\"month*temperature\"\r\n            size={2}\r\n            color={\"city\"}\r\n            shape={\"smooth\"}\r\n          />\r\n          <Geom\r\n            type=\"point\"\r\n            position=\"month*temperature\"\r\n            size={4}\r\n            shape={\"circle\"}\r\n            color={\"city\"}\r\n            style={{\r\n              stroke: \"#fff\",\r\n              lineWidth: 1\r\n            }}\r\n          />\r\n        </Chart>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Chart, Geom, Axis, Tooltip } from \"bizcharts\";\r\nexport default class Bar extends React.Component {\r\n  render() {\r\n    const data = [\r\n      {\r\n        year: \"1 月\",\r\n        sales: 38\r\n      },\r\n      {\r\n        year: \"2 月\",\r\n        sales: 52\r\n      },\r\n      {\r\n        year: \"3 月\",\r\n        sales: 61\r\n      },\r\n      {\r\n        year: \"4 月\",\r\n        sales: 145\r\n      },\r\n      {\r\n        year: \"5 月\",\r\n        sales: 48\r\n      },\r\n      {\r\n        year: \"6 月\",\r\n        sales: 38\r\n      },\r\n      {\r\n        year: \"7 月\",\r\n        sales: 28\r\n      },\r\n      {\r\n        year: \"8 月\",\r\n        sales: 38\r\n      },\r\n      {\r\n        year: \"59 月\",\r\n        sales: 68\r\n      },\r\n      {\r\n        year: \"10 月\",\r\n        sales: 38\r\n      },\r\n      {\r\n        year: \"11 月\",\r\n        sales: 58\r\n      },\r\n      {\r\n        year: \"12 月\",\r\n        sales: 38\r\n      }\r\n    ];\r\n    const cols = {\r\n      sales: {\r\n        tickInterval: 20\r\n      }\r\n    };\r\n    return (\r\n      <div style={{ width: \"100%\", marginLeft: -30 }}>\r\n        <Chart height={338} data={data} scale={cols} forceFit>\r\n          <Axis name=\"year\" />\r\n          <Axis name=\"sales\" />\r\n          <Tooltip\r\n            crosshairs={{\r\n              type: \"y\"\r\n            }}\r\n          />\r\n          <Geom type=\"interval\" position=\"year*sales\" />\r\n        </Chart>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Icon, Card, Statistic, DatePicker, Timeline } from \"antd\";\r\nimport moment from \"moment\";\r\nimport Line from \"./line\";\r\nimport Bar from \"./bar\";\r\nimport \"./home.less\";\r\nconst dateFormat = \"YYYY/MM/DD\";\r\nconst { RangePicker } = DatePicker;\r\nexport default class Home extends Component {\r\n  state = {\r\n    isVisited: true\r\n  };\r\n  handleChange = isVisited => {\r\n    return () => this.setState({ isVisited });\r\n  };\r\n  render() {\r\n    const { isVisited } = this.state;\r\n    return (\r\n      <div className=\"home\">\r\n        <Card\r\n          className=\"home-card\"\r\n          title=\"商品总量\"\r\n          extra={\r\n            <Icon style={{ color: \"rgba(0,0,0,.45)\" }} type=\"question-circle\" />\r\n          }\r\n          style={{ width: 250 }}\r\n          headStyle={{ color: \"rgba(0,0,0,.45)\" }}\r\n        >\r\n          <Statistic\r\n            value={1128163}\r\n            suffix=\"个\"\r\n            style={{ fontWeight: \"bolder\" }}\r\n          />\r\n          <Statistic\r\n            value={15}\r\n            valueStyle={{ fontSize: 15 }}\r\n            prefix={\"周同比\"}\r\n            suffix={\r\n              <div>\r\n                %\r\n                <Icon\r\n                  style={{ color: \"red\", marginLeft: 10 }}\r\n                  type=\"arrow-down\"\r\n                />\r\n              </div>\r\n            }\r\n          />\r\n          <Statistic\r\n            value={10}\r\n            valueStyle={{ fontSize: 15 }}\r\n            prefix={\"日同比\"}\r\n            suffix={\r\n              <div>\r\n                %\r\n                <Icon\r\n                  style={{ color: \"#3f8600\", marginLeft: 10 }}\r\n                  type=\"arrow-up\"\r\n                />\r\n              </div>\r\n            }\r\n          />\r\n        </Card>\r\n        <Line />\r\n        <Card\r\n          className=\"home-content\"\r\n          title={\r\n            <div className=\"home-menu\">\r\n              <span\r\n                className={\r\n                  isVisited\r\n                    ? \"home-menu-active home-menu-visited\"\r\n                    : \"home-menu-visited\"\r\n                }\r\n                onClick={this.handleChange(true)}\r\n              >\r\n                访问量\r\n              </span>\r\n              <span\r\n                className={isVisited ? \"\" : \"home-menu-active\"}\r\n                onClick={this.handleChange(false)}\r\n              >\r\n                销售量\r\n              </span>\r\n            </div>\r\n          }\r\n          extra={\r\n            <RangePicker\r\n              defaultValue={[\r\n                moment(\"2019/01/01\", dateFormat),\r\n                moment(\"2019/06/01\", dateFormat)\r\n              ]}\r\n              format={dateFormat}\r\n            />\r\n          }\r\n        >\r\n          <Card\r\n            className=\"home-table-left\"\r\n            title={isVisited ? \"访问趋势\" : \"销售趋势\"}\r\n            bodyStyle={{ padding: 0, height: 275 }}\r\n            extra={<Icon type=\"reload\" />}\r\n          >\r\n            <Bar />\r\n          </Card>\r\n          <Card\r\n            title=\"任务\"\r\n            extra={<Icon type=\"reload\" />}\r\n            className=\"home-table-right\"\r\n          >\r\n            <Timeline>\r\n              <Timeline.Item color=\"green\">新版本迭代会</Timeline.Item>\r\n              <Timeline.Item color=\"green\">完成网站设计初版</Timeline.Item>\r\n              <Timeline.Item color=\"green\">\r\n                <p>联调接口</p>\r\n                <p>功能验收</p>\r\n              </Timeline.Item>\r\n              <Timeline.Item color=\"green\">\r\n                <p>登录功能设计</p>\r\n                <p>权限验证</p>\r\n                <p>页面排版</p>\r\n              </Timeline.Item>\r\n            </Timeline>\r\n          </Card>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Card, Button } from \"antd\";\r\nimport ReactEcharts from \"echarts-for-react\";\r\n/*后台管理的柱状图路由组件\r\n */\r\nexport default class Bar extends Component {\r\n  state = {\r\n    sales: [5, 20, 36, 10, 10, 20],\r\n    inventorys: [15, 30, 46, 20, 20, 40]\r\n  };\r\n  getOption = () => {\r\n    const { sales, inventorys } = this.state;\r\n    return {\r\n      title: {\r\n        text: \"\"\r\n      },\r\n      tooltip: {},\r\n      legend: {\r\n        data: [\"销量\", \"库存\"]\r\n      },\r\n      xAxis: {\r\n        data: [\"衬衫\", \"羊毛衫\", \"雪纺衫\", \"裤子\", \"高跟鞋\", \"袜子\"]\r\n      },\r\n      yAxis: {},\r\n      series: [\r\n        {\r\n          name: \"销量\",\r\n          type: \"bar\",\r\n          data: sales\r\n        },\r\n        {\r\n          name: \"库存\",\r\n          type: \"bar\",\r\n          data: inventorys\r\n        }\r\n      ]\r\n    };\r\n  };\r\n \r\n  render() {\r\n    return (\r\n      <div>\r\n        \r\n        <Card >\r\n          <ReactEcharts option={this.getOption()} style={{ height: 300 }} />\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Card, Button } from \"antd\";\r\nimport ReactEcharts from \"echarts-for-react\";\r\n/*后台管理的柱状图路由组件\r\n */\r\nexport default class Line extends Component {\r\n  state = {\r\n    sales: [5, 20, 36, 10, 10, 20],\r\n    inventorys: [15, 30, 46, 20, 20, 40]\r\n  };\r\n  getOption = () => {\r\n    const { sales, inventorys } = this.state;\r\n    return {\r\n     \r\n      tooltip: {},\r\n      legend: {\r\n        data: [\"销量\", \"库存\"]\r\n      },\r\n      xAxis: {\r\n        data: [\"衬衫\", \"羊毛衫\", \"雪纺衫\", \"裤子\", \"高跟鞋\", \"袜子\"]\r\n      },\r\n      yAxis: {},\r\n      series: [\r\n        {\r\n          name: \"销量\",\r\n          type: \"line\",\r\n          data: sales\r\n        },\r\n        {\r\n          name: \"库存\",\r\n          type: \"line\",\r\n          data: inventorys\r\n        }\r\n      ]\r\n    };\r\n  };\r\n  \r\n  render() {\r\n    return (\r\n      <div>\r\n        \r\n        <Card >\r\n          <ReactEcharts option={this.getOption()} style={{ height: 300 }} />\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Card, Button } from \"antd\";\r\nimport ReactEcharts from \"echarts-for-react\";\r\n/*后台管理的柱状图路由组件\r\n */\r\nexport default class Pie extends Component {\r\n  \r\n  getOption = () => {\r\n   \r\n    return {\r\n        backgroundColor: '#2c343c',\r\n    \r\n        title: {\r\n            text: '饼图',\r\n            left: 'center',\r\n            top: 20,\r\n            textStyle: {\r\n                color: '#ccc'\r\n            }\r\n        },\r\n    \r\n        tooltip: {\r\n            trigger: 'item',\r\n            formatter: '{a} <br/>{b} : {c} ({d}%)'\r\n        },\r\n    \r\n        visualMap: {\r\n            show: false,\r\n            min: 80,\r\n            max: 600,\r\n            inRange: {\r\n                colorLightness: [0, 1]\r\n            }\r\n        },\r\n        series: [\r\n            {\r\n                name: '访问来源',\r\n                type: 'pie',\r\n                radius: '55%',\r\n                center: ['50%', '50%'],\r\n                data: [\r\n                    {value: 250, name: '衬衫'},\r\n                    {value: 200, name: '羊毛衫'},\r\n                    {value: 360, name: '雪纺衫'},\r\n                    {value: 300, name: '裤子'},\r\n                    {value: 200, name: '高跟鞋'},\r\n                    {value: 200, name: '袜子'},\r\n                    \r\n                ].sort(function (a, b) { return a.value - b.value; }),\r\n                roseType: 'radius',\r\n                label: {\r\n                    color: 'rgba(255, 255, 255, 0.3)'\r\n                },\r\n                labelLine: {\r\n                    lineStyle: {\r\n                        color: 'rgba(255, 255, 255, 0.3)'\r\n                    },\r\n                    smooth: 0.2,\r\n                    length: 10,\r\n                    length2: 20\r\n                },\r\n                itemStyle: {\r\n                    color: '#c23531',\r\n                    shadowBlur: 200,\r\n                    shadowColor: 'rgba(0, 0, 0, 0.5)'\r\n                },\r\n    \r\n                animationType: 'scale',\r\n                animationEasing: 'elasticOut',\r\n                animationDelay: function (idx) {\r\n                    return Math.random() * 200;\r\n                }\r\n            }\r\n        ]\r\n    };\r\n  };\r\n \r\n  render() {\r\n    return (\r\n      <div>\r\n        <Card >\r\n          <ReactEcharts option={this.getOption()} style={{ height: 300 }} />\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport './index.less'\r\nclass LinkButton extends Component {\r\n    render() {\r\n        return (\r\n            <button {...this.props} className=\"link-button\"></button>\r\n        );\r\n    }\r\n}\r\n\r\nexport default LinkButton;","export const PAGESIZE = 5\r\nexport const BASE_IMG_URL = 'http://localhost:5000/upload/'","import React, { Component } from \"react\";\r\nimport { Card, Select, Input, Button, Icon, Table } from \"antd\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport LinkButton from \"../../components/link-button/link-button\";\r\nimport { getProducts, getUpdateStatus } from \"../../redux/action\";\r\nimport { PAGESIZE } from \"../../utils/constants\";\r\nconst Option = Select.Option;\r\n/* 商品管理主页面 */\r\nclass Home extends Component {\r\n  state = {\r\n    current: \"1\",\r\n    searchType: \"productName\",\r\n    searchName: \"\"\r\n  };\r\n  //挂在前创建Table的行分类\r\n  UNSAFE_componentWillMount() {\r\n    this.columns = [\r\n      {\r\n        title: \"商品名称\",\r\n        dataIndex: \"name\"\r\n      },\r\n      {\r\n        title: \"商品描述\",\r\n        dataIndex: \"desc\"\r\n      },\r\n      {\r\n        title: \"价格\",\r\n        dataIndex: \"price\",\r\n        render: price => \"￥\" + price\r\n      },\r\n      {\r\n        title: \"状态\",\r\n        //dataIndex: \"status\",\r\n        width: \"5%\",\r\n        render: product => {\r\n          //从product中取出状态（status）和商品ID（_id）\r\n          const { status, _id } = product;\r\n          //这里存一个新状态是为了发送ajax请求，例：商品为在售时status时等于1,要下架就需要将status改为2，反之改成1\r\n          const newState = status === 1 ? 2 : 1;\r\n          \r\n          return (\r\n            <span>\r\n              {/* 按钮点击后，进心上架或下架*/}\r\n              <Button\r\n                onClick={() =>\r\n                  this.props.getUpdateStatus(\r\n                    _id,\r\n                    newState,\r\n                    this.pageNum,\r\n                    PAGESIZE\r\n                  )\r\n                }\r\n                type=\"default\"\r\n              >\r\n                {status === 1 ? \"下　架\" : \"上　架\"}\r\n              </Button>\r\n              <Button type=\"link\">{status === 1 ? \"在　售\" : \"已下架\"}</Button>\r\n            </span>\r\n          );\r\n        }\r\n      },\r\n      {\r\n        title: \"操作\",\r\n        width: \"10%\",\r\n        render: product => {\r\n          return (\r\n            <span>\r\n              <LinkButton\r\n                onClick={() =>\r\n                  //向前跳转到商品“详情”页面，并且发送一个product\r\n                  this.props.history.push(\"/product/detail\", { product })\r\n                }\r\n              >\r\n                详情\r\n              </LinkButton>\r\n              <br />\r\n              {/* 如何向事件回调函数传递参数:先定义一个匿名函数，在函数里面调用处理函数并传入参数 */}\r\n              <LinkButton\r\n                onClick={() =>\r\n                //向前跳转到商品“修改”页面，并且发送一个product\r\n                  this.props.history.push(\"/product/addupdateitem\", product )\r\n                }\r\n              >\r\n                修改\r\n              </LinkButton>\r\n            </span>\r\n          );\r\n        }\r\n      }\r\n    ];\r\n  }\r\n  //页面加载完发送获取商品请求\r\n  componentDidMount() {\r\n    const initpageNum = this.pageNum === undefined ? 1 : this.pageNum;\r\n    //console.log(this.pageNum);\r\n    this.props.getProducts(initpageNum, PAGESIZE);\r\n  }\r\n  //Table发生变化触发\r\n  changePage = page => {\r\n    //page就是当前页，发生改变的时候就获取当前页商品信息\r\n    this.props.getProducts(page, PAGESIZE);\r\n    //将当前页存到组件里\r\n    this.pageNum = page;\r\n  };\r\n\r\n  /* ---------------------------------------------------------- */\r\n  render() {\r\n    //render\r\n    const { searchType, searchName } = this.state;\r\n    const title = (\r\n      <span>\r\n        <Select\r\n          value={searchType}\r\n          onChange={value => this.setState({ searchType: value })}\r\n        >\r\n          <Option value=\"productName\">按名称搜索</Option>\r\n          <Option value=\"productDesc\">按描述搜索</Option>\r\n        </Select>\r\n        <Input\r\n          placeholder=\"输入关键字，如果没有内容则搜索全部。\"\r\n          value={searchName}\r\n          style={{ width: 300, margin: \"0 10px\" }}\r\n          onChange={event => this.setState({ searchName: event.target.value })}\r\n        />\r\n        <Button\r\n          type=\"primary\"\r\n          onClick={() => {\r\n            this.props.getProducts(1, PAGESIZE, searchType, searchName);\r\n          }}\r\n        >\r\n          <Icon type=\"file-search\" />\r\n          搜索\r\n        </Button>\r\n      </span>\r\n    );\r\n    const extra = (\r\n      <Button\r\n        type=\"primary\"\r\n        onClick={() => this.props.history.push(\"/product/addupdateitem\")}\r\n      >\r\n        <Icon type=\"plus\" />\r\n        添加\r\n      </Button>\r\n    );\r\n    const { products } = this.props;\r\n    //console.log(products);\r\n\r\n    if (products.status === 1) {\r\n      this.loading = true;\r\n      return null;\r\n    } else {\r\n      this.loading = false;\r\n    }\r\n    const { list, total } = products.data;\r\n    const dataSource = list;\r\n    /* ---------------------------------------------------------- */\r\n    //标签\r\n    return (\r\n      <Card title={title} extra={extra}>\r\n        <Table\r\n          rowKey=\"_id\"\r\n          loading={this.loading}\r\n          dataSource={dataSource}\r\n          columns={this.columns}\r\n          pagination={{\r\n            total,\r\n            defaultPageSize: PAGESIZE,\r\n            showQuickJumper: true,\r\n            onChange: this.changePage\r\n          }}\r\n        />\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(state => ({ products: state.products }), {\r\n  getProducts,\r\n  getUpdateStatus\r\n})(Home);\r\n","import React, { Component } from \"react\";\r\nimport { Card, List, Icon } from \"antd\";\r\n\r\nimport LinkButton from \"../../components/link-button/link-button\";\r\nimport \"./detail.less\";\r\nimport { reqCategory } from \"../../api/index\";\r\nimport {BASE_IMG_URL} from '../../utils/constants'\r\nconst Item = List.Item;\r\nclass Detail extends Component {\r\n  state = {\r\n    categoryName1: \"\",\r\n    categoryName2: \"\"\r\n  };\r\n  async componentDidMount() {\r\n    const { pCategoryId, categoryId } = this.props.location.state.product;\r\n    if (pCategoryId === \"0\") {\r\n      /* \r\n      \"status\": 0,\r\n      \"data\": {\r\n          \"parentId\": \"0\",\r\n          \"_id\": \"5e0bfcba6f3ce12cb090b203\",\r\n          \"name\": \"数码产品\",\r\n          \"__v\": 0\r\n      }\r\n      */\r\n      const result = await reqCategory(categoryId);\r\n      const categoryName1 = result.data.name;\r\n      this.setState({ categoryName1 });\r\n    } else {\r\n      /* const result1 = await reqCategory(pCategoryId);\r\n      const result2 = await reqCategory(categoryId); */\r\n      //debugger\r\n      //一次性发多个请求，只有成功了，才正常处理\r\n      const results = await Promise.all([\r\n        reqCategory(pCategoryId),\r\n        reqCategory(categoryId)\r\n      ]);\r\n      const categoryName1 = results[0].data.name;\r\n      const categoryName2 = results[1].data.name;\r\n      this.setState({ categoryName1, categoryName2 });\r\n    }\r\n  }\r\n  render() {\r\n    const title = (\r\n      <LinkButton onClick={() => this.props.history.goBack()}>\r\n        <Icon type=\"rollback\" />\r\n        &nbsp;&nbsp;返回商品列表\r\n      </LinkButton>\r\n    );\r\n    //这里的数据是home组件传过来的，通过push方法\r\n    const {\r\n      imgs,\r\n      name,\r\n      desc,\r\n      price,\r\n      detail\r\n    } = this.props.location.state.product;\r\n    //console.log(this.props.location.state);\r\n\r\n    const { categoryName1, categoryName2 } = this.state;\r\n    //console.log(this.props.location.state);\r\n    return (\r\n      <Card title={title}>\r\n        <List>\r\n          <Item>\r\n            <span className=\"title\">商品名称：</span>\r\n            <span>{name}</span>\r\n          </Item>\r\n          <Item>\r\n            <span className=\"title\">商品描述：</span>\r\n            <span>{desc}</span>\r\n          </Item>\r\n          <Item>\r\n            <span className=\"title\">商品价格：</span>\r\n            <span>{price}</span>\r\n          </Item>\r\n          <Item>\r\n            <span className=\"title\">所属分类：</span>\r\n            <span>\r\n              {categoryName1} {categoryName2 ? \"-->\" + categoryName2 : \"\"}\r\n            </span>\r\n          </Item>\r\n          <Item>\r\n            <span className=\"title\">商品图片：</span>\r\n            <span>\r\n              {imgs.length > 0 ? imgs.map(img => (<img key={img} src={BASE_IMG_URL+img} style={{ width: 150, height: \"auto\" }} alt=\"图片\" /> )) : <span>没有图片</span>}\r\n            </span>\r\n          </Item>\r\n          <Item>\r\n            <span className=\"title\">商品详情：</span>\r\n            <span dangerouslySetInnerHTML={{ __html: detail }}></span>\r\n          </Item>\r\n        </List>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Detail;\r\n","import React, { Component } from \"react\";\r\nimport { Upload, Icon, Modal, message } from \"antd\";\r\nimport PropTypes from 'prop-types'\r\n\r\nimport {reqDeleteImg} from '../../api/index'\r\nimport {BASE_IMG_URL} from '../../utils/constants'\r\nfunction getBase64(file) {\r\n  return new Promise((resolve, reject) => {\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(file);\r\n    reader.onload = () => resolve(reader.result);\r\n    reader.onerror = error => reject(error);\r\n  });\r\n}\r\n\r\nexport default class PicturesWall extends Component {\r\n  static propTypes = {\r\n    imgs:PropTypes.array\r\n  }\r\n  constructor(props){\r\n    super(props)\r\n    \r\n    let fileList = []\r\n    //debugger\r\n    const {imgs} = this.props\r\n    if(imgs && imgs.length > 0){\r\n      fileList = imgs.map((img,index) => ({\r\n        uid:-index,\r\n        name:img,\r\n        status:'done',\r\n        url:BASE_IMG_URL + img\r\n      }))\r\n    }\r\n    this.state = {\r\n      previewVisible: false, //是否显示预览\r\n      previewImage: \"\", //预览img\r\n      fileList\r\n    }\r\n  }\r\n  //隐藏对话框\r\n  handleCancel = () => this.setState({ previewVisible: false });\r\n  //点击文件链接或预览图标时的回调\r\n  handlePreview = async file => {\r\n    console.log(\"handlPreview()\", file);\r\n    if (!file.url && !file.preview) {\r\n      file.preview = await getBase64(file.originFileObj);\r\n    }\r\n    this.setState({\r\n      previewImage: file.url || file.preview,\r\n      previewVisible: true\r\n    });\r\n  };\r\n  //upload发生改变时触发\r\n  handleChange = async ({ file, fileList }) => {\r\n    //console.log(fileList);\r\n    console.log(\"status\" + file.status);\r\n    if (file.status === \"done\") {\r\n      const response = file.response;\r\n      if (response.status === 0) {\r\n        message.success(\"上传成功\");\r\n        const { name, url } = response.data;\r\n        file = fileList[fileList.length - 1];\r\n        file.name = name;\r\n        file.url = url;\r\n      } else {\r\n        message.error(\"上传失败\");\r\n      }\r\n    } else if(file.status === 'removed'){\r\n      const result = await reqDeleteImg(file.name)\r\n      if(result.status === 0){\r\n        message.success('删除成功')\r\n      } else {\r\n        message.error('删除图片失败')\r\n      }\r\n    }\r\n    this.setState({ fileList });\r\n  };\r\n  getImgs = () => {\r\n    return this.state.fileList.map(file => file.name)\r\n  }\r\n  render() {\r\n    const { previewVisible, previewImage, fileList } = this.state;\r\n    const uploadButton = (\r\n      <div>\r\n        <Icon type=\"plus\" />\r\n        <div className=\"ant-upload-text\">Upload</div>\r\n      </div>\r\n    );\r\n    return (\r\n      <div className=\"clearfix\">\r\n        <Upload\r\n          action=\"/manage/img/upload\" //上传地址\r\n          accept=\"image/*\" //只接受图片格式\r\n          name=\"image\" //发到后台的文件参数名\r\n          listType=\"picture-card\" //卡片样式\r\n          fileList={fileList}\r\n          onPreview={this.handlePreview}\r\n          onChange={this.handleChange}\r\n        >\r\n          {fileList.length >= 8 ? null : uploadButton}\r\n        </Upload>\r\n        <Modal\r\n          visible={previewVisible}\r\n          footer={null}\r\n          onCancel={this.handleCancel}\r\n        >\r\n          <img alt=\"example\" style={{ width: \"100%\" }} src={previewImage} />\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { EditorState, convertToRaw, ContentState } from \"draft-js\";\r\nimport { Editor } from \"react-draft-wysiwyg\";\r\nimport draftToHtml from \"draftjs-to-html\";\r\nimport htmlToDraft from \"html-to-draftjs\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\r\n\r\nexport default class RichTextEditor extends Component {\r\n  static propTypes = {\r\n    detail: PropTypes.string\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    const html = this.props.detail;\r\n    if (html) {\r\n      const contentBlock = htmlToDraft(html);\r\n      if (contentBlock) {\r\n        const contentState = ContentState.createFromBlockArray(\r\n          contentBlock.contentBlocks\r\n        );\r\n        const editorState = EditorState.createWithContent(contentState);\r\n        this.state = {\r\n          editorState\r\n        };\r\n      }\r\n    } else {\r\n      this.state = {\r\n        editorState: EditorState.createEmpty()\r\n      };\r\n    }\r\n  }\r\n  onEditorStateChange = editorState => {\r\n    this.setState({\r\n      editorState\r\n    });\r\n  };\r\n\r\n\r\n  getDetail = () => {\r\n    return draftToHtml(\r\n      convertToRaw(this.state.editorState.getCurrentContent())\r\n    );\r\n  };\r\n\r\n\r\n  render() {\r\n    const { editorState } = this.state;\r\n    return (\r\n      <div>\r\n        <Editor\r\n          editorState={editorState}\r\n          editorStyle={{\r\n            border: \"1px solid #ccc\",\r\n            padding: \"0px 10px\",\r\n            minHeight: 300\r\n          }}\r\n          onEditorStateChange={this.onEditorStateChange}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Card, Form, Icon, Input, Button, Cascader } from \"antd\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport LinkButton from \"../../components/link-button/link-button\";\r\nimport { reqCategories } from \"../../api/index\";\r\nimport {\r\n  getAaddProductStatus,\r\n  getUpdateProductStatus\r\n} from \"../../redux/action\";\r\nimport PicturesWall from \"./pictures-wall\";\r\nimport RichTextEditor from \"./rich-text-editor\";\r\nconst { Item } = Form;\r\nconst { TextArea } = Input;\r\n\r\n/* 这个组件既是添加还是修改 */\r\nclass AddUpdateItem extends Component {\r\n  state = {\r\n    options: []\r\n  };\r\n  constructor(props) {\r\n    super(props);\r\n    this.pw = React.createRef();\r\n    this.editor = React.createRef();\r\n  }\r\n  //组件挂载完就获取商品列表 \r\n  componentDidMount() {\r\n    this.getCategorys(\"0\");\r\n  }\r\n  UNSAFE_componentWillMount() {\r\n    //取出携带的prodcut\r\n    const product = this.props.location.state;\r\n    //保存是否是更新的标识 true/false\r\n    this.isUpdate = !!product;\r\n    //保存商品，如果没有，保存的是{}\r\n    this.product = product || {};\r\n  }\r\n  //初始化options\r\n  initOptions = async categories => {\r\n    const options = categories.map(c => ({\r\n      value: c._id,\r\n      label: c.name,\r\n      isLeaf: false\r\n    }));\r\n\r\n    //如果是一个二级分类商品的更新\r\n    const { isUpdate, product } = this;\r\n    const { pCategoryId } = product;\r\n    if (isUpdate && pCategoryId !== \"0\") {\r\n      //获取对应的二级分类列表\r\n      const subcategories = await this.getCategorys(pCategoryId);\r\n      //生成二级列表的options\r\n      const chiildOptions = subcategories.map(c => ({\r\n        value: c._id,\r\n        label: c.name,\r\n        isLeaf: true\r\n      }));\r\n      const targetOption = options.find(option => option.value === pCategoryId);\r\n      targetOption.children = chiildOptions;\r\n    }\r\n    this.setState({ options });\r\n  };\r\n\r\n  //异步获取一级或二级分类列表\r\n  getCategorys = async parentId => {\r\n    const result = await reqCategories(parentId);\r\n    //debugger\r\n    //如果parentId为0则创建分类列表\r\n    if (result.status === 0) {\r\n      const categories = result.data;\r\n      //如果parentId为0是一级分类列表\r\n      if (parentId === \"0\") {\r\n        this.initOptions(categories);\r\n      } else {\r\n        //否则返回出一个普通分类列表\r\n        return categories;\r\n      }\r\n    }\r\n  };\r\n  //点击一级分类就调用\r\n  loadData = async selectedOptions => {\r\n    //debugger\r\n    //获取到当前选中的option\r\n    const targetOption = selectedOptions[selectedOptions.length - 1];\r\n    //显示loading效果\r\n    targetOption.loading = true;\r\n    //根据选中的分类，请求获取二级分类列表\r\n    const subCategories = await this.getCategorys(targetOption.value);\r\n    //获取到数据后loading效果消失\r\n    targetOption.loading = false;\r\n    //如果有子分类且长度大于0则创建子分类\r\n    if (subCategories && subCategories.length > 0) {\r\n      const childoptions = subCategories.map(c => ({\r\n        value: c._id,\r\n        label: c.name,\r\n        isLeaf: true\r\n      }));\r\n      //给选中的option添加一个子分类\r\n      targetOption.children = childoptions;\r\n    } else {\r\n      //否则将当前option的isleaf设置为true,既没有子分类\r\n      targetOption.isLeaf = true;\r\n    }\r\n    this.setState({ ...this.state.options });\r\n  };\r\n  //自定义验证价格\r\n  validatorPrice = (rule, value, callback) => {\r\n    if (value * 1 <= 0) {\r\n      callback(\"价格必须大于0\");\r\n    } else {\r\n      callback();\r\n    }\r\n  };\r\n  //提交表单\r\n  submit = () => {\r\n    this.props.form.validateFields((err, values) => {\r\n      if (!err) {\r\n        /* const _id = this.props.location.state._id != undefined ? this.props.location.state._id : 0 */\r\n        const { name, desc, price, categoryIds } = values;\r\n        const pCategoryId = categoryIds[0];\r\n        const categoryId = categoryIds[1];\r\n        const imgs = this.pw.current.getImgs();\r\n        const detail = this.editor.current.getDetail();\r\n        //console.log(name, pCategoryId, categoryId, desc, price, imgs, detail);\r\n        //console.log(this.product);\r\n        //console.log(this.isUpdate);\r\n        if(this.isUpdate === true){\r\n          const _id = this.props.location.state._id\r\n          this.props.getUpdateProductStatus(_id,categoryId,pCategoryId,name,desc,price,detail,imgs)\r\n          this.props.history.goBack()\r\n        } else{\r\n          this.props.getAaddProductStatus(categoryId,pCategoryId,name,desc,price,detail,imgs)\r\n          this.props.history.goBack()\r\n        }\r\n\r\n      }\r\n    });\r\n  };\r\n  render() {\r\n    const { isUpdate, product } = this;\r\n    const { categoryId, pCategoryId, imgs, detail } = product;\r\n    //用来接收级联分类ID数组\r\n    const categoryIds = [];\r\n    if (isUpdate) {\r\n      if (pCategoryId === \"0\") {\r\n        categoryIds.push(categoryId);\r\n      } else {\r\n        categoryIds.push(pCategoryId);\r\n        categoryIds.push(categoryId);\r\n      }\r\n    }\r\n    const title = (\r\n      <LinkButton onClick={() => this.props.history.goBack()}>\r\n        <Icon type=\"rollback\" />\r\n        &nbsp;&nbsp;返回\r\n      </LinkButton>\r\n    );\r\n\r\n    const formItemLayout = {\r\n      labelCol: { span: 2 },\r\n      wrapperCol: { span: 8 }\r\n    };\r\n    const { getFieldDecorator } = this.props.form;\r\n    return (\r\n      <Card title={title} extra={isUpdate ? \"修改商品\" : \"添加商品\"}>\r\n        <Form {...formItemLayout}>\r\n          <Item label=\"商品名称\">\r\n            {getFieldDecorator(\"name\", {\r\n              initialValue: product.name,\r\n              rules: [{ required: true, message: \"必须填写商品名称\" }]\r\n            })(<Input className=\"addInput\" placeholder=\"请输入商品名称\" />)}\r\n          </Item>\r\n\r\n          <Item label=\"商品描述\">\r\n            {getFieldDecorator(\"desc\", {\r\n              initialValue: product.desc,\r\n              rules: [{ required: true, message: \"必须填写商品描述\" }]\r\n            })(<TextArea placeholder=\"请输入商品描述\" autoSize={true} />)}\r\n          </Item>\r\n\r\n          <Item label=\"商品价格\">\r\n            {getFieldDecorator(\"price\", {\r\n              initialValue: product.price,\r\n              rules: [\r\n                { required: true, message: \"必须填写商品价格\" },\r\n                { validator: this.validatorPrice }\r\n              ]\r\n            })(\r\n              <Input\r\n                placeholder=\"请输入商品价格\"\r\n                addonAfter=\"元\"\r\n                type=\"number\"\r\n              />\r\n            )}\r\n          </Item>\r\n\r\n          <Item label=\"商品类型\">\r\n            {getFieldDecorator(\"categoryIds\", {\r\n              initialValue: categoryIds,\r\n              rules: [{ required: true, message: \"必须填写商品描述\" }]\r\n            })(\r\n              <Cascader options={this.state.options} loadData={this.loadData} />\r\n            )}\r\n          </Item>\r\n\r\n          <Item label=\"商品图片\">\r\n            <div>商品图片</div>\r\n            <PicturesWall ref={this.pw} imgs={imgs} />\r\n          </Item>\r\n          <Item\r\n            label=\"商品详情\"\r\n            labelCol={{ span: 2 }}\r\n            wrapperCol={{ span: 20 }}\r\n          >\r\n            <RichTextEditor ref={this.editor} detail={detail} />\r\n          </Item>\r\n          <Item>\r\n            <Button type=\"primary\" onClick={this.submit}>\r\n              提交\r\n            </Button>\r\n          </Item>\r\n        </Form>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\nexport default connect(state => ({ productStatus:state.productStatus }), {\r\n  getAaddProductStatus,\r\n  getUpdateProductStatus\r\n})(Form.create()(AddUpdateItem));\r\n","import React ,{Component} from 'react'\r\nimport {Switch,Route,Redirect} from 'react-router-dom';\r\n\r\nimport Home from './home'\r\nimport Detail from './detail'\r\nimport AddUpdateItem from './addupdateitem'\r\n//商品路由\r\nexport default class Product extends Component{\r\n    render(){\r\n        return(\r\n            <Switch>\r\n                <Route path='/product' component={Home} exact />\r\n                <Route path='/product/detail' component={Detail} />\r\n                <Route path='/product/addupdateitem' component={AddUpdateItem} />\r\n                <Redirect to='/home/' />\r\n            </Switch>\r\n        )\r\n    }\r\n}","export function formateDate(time) {\r\n  if (!time) return ''\r\n  let date = new Date(time)\r\n  return date.getFullYear() + '-' + (date.getMonth() + 1) + '-' + date.getDate()\r\n    + ' ' + date.getHours() + ':' + date.getMinutes() + ':' + date.getSeconds()\r\n}","import React, { Component } from \"react\";\r\nimport { Card, Table, Button, Modal, Input, Tree } from \"antd\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  getRoleList,\r\n  getAddRoleStatus,\r\n  getUpdateRoleAuthStatus\r\n} from \"../../redux/action\";\r\nimport { PAGESIZE } from \"../../utils/constants\";\r\nimport { formateDate } from \"../../utils/index\";\r\nimport menuList from \"../../config/menuConfig.js\";\r\nconst { TreeNode } = Tree;\r\n//角色路由\r\nclass Role extends Component {\r\n  state = {\r\n    role: {},\r\n    AddVisible: false,\r\n    AuthVisible: false,\r\n    roleNameValue: \"\",\r\n    checkedKeys: []\r\n  };\r\n  //组件挂在前初始化Table和Tree数据\r\n  UNSAFE_componentWillMount() {\r\n    this.columns = [\r\n      {\r\n        title: \"角色名称\",\r\n        dataIndex: \"name\"\r\n      },\r\n      {\r\n        title: \"创建时间\",\r\n        dataIndex: \"create_time\",\r\n        render: create_time => formateDate(create_time)\r\n      },\r\n      {\r\n        title: \"授权时间\",\r\n        dataIndex: \"auth_time\",\r\n        render: auth_time => formateDate(auth_time)\r\n      },\r\n      {\r\n        title: \"授权人\",\r\n        dataIndex: \"auth_name\"\r\n      }\r\n    ];\r\n\r\n    this.treeNodes = this.getTreeNode(menuList);\r\n  }\r\n  componentDidMount() {\r\n    this.props.getRoleList();\r\n  }\r\n  //点击行将role传入state\r\n  onRow = role => {\r\n    return {\r\n      onClick: value => {\r\n        //console.log(role);\r\n        this.setState({ role, checkedKeys: role.menus });\r\n      }\r\n    };\r\n  };\r\n/* --------------------------------------------------------------------------------------------------------------------- */\r\n  //显示添加角色modal\r\n  showAddModal = () => {\r\n    this.setState({\r\n      AddVisible: true\r\n    });\r\n  };\r\n\r\n  //添加角色按钮\r\n  handleAddRole = () => {\r\n    const { roleNameValue } = this.state;\r\n    this.props.getAddRoleStatus(roleNameValue);\r\n    this.setState({\r\n      roleNameValue: \"\",\r\n      AddVisible: false\r\n    });\r\n  };\r\n\r\n  //关闭添加角色modal\r\n  handleCancel = () => {\r\n    this.setState({\r\n      AddVisible: false\r\n    });\r\n  };\r\n\r\n  //添加角色Input(受控)\r\n  roleNameInput = e => {\r\n    this.setState({ roleNameValue: e.target.value });\r\n  };\r\n/* --------------------------------------------------------------------------------------------------------------------- */\r\n  //显示角色权限modal\r\n  showAuthModal = () => {\r\n    this.setState({ AuthVisible: true });\r\n  };\r\n  //修改权限按钮\r\n  handleAuthRole = () => {\r\n    const now = Date.now();\r\n    const { role, checkedKeys } = this.state;\r\n    const username = this.props.user.username;\r\n    this.props.getUpdateRoleAuthStatus(role._id, checkedKeys, now, username);\r\n    this.setState({ AuthVisible: false });\r\n    this.props.history.replace('/login')\r\n  };\r\n  //关闭角色权限modal\r\n  handleAuthCancel = () => {\r\n    this.setState({ AuthVisible: false });\r\n  };\r\n\r\n  //获取树节点\r\n  getTreeNode = menuList => {\r\n    return menuList.reduce((pre, item) => {\r\n      pre.push(\r\n        <TreeNode title={item.title} key={item.key}>\r\n          {item.children ? this.getTreeNode(item.children) : null}\r\n        </TreeNode>\r\n      );\r\n      return pre;\r\n    }, []);\r\n  };\r\n\r\n  //选择复选框触发\r\n  onCheck = checkedKeys => {\r\n    this.setState({ checkedKeys });\r\n  };\r\n  /* ----------------------------------------------------------------------------------------------------------------- */\r\n\r\n  render() {\r\n    //从redux获取到roles(角色列表)\r\n    const { roles } = this.props;\r\n    //取出单个角色对象\r\n    const { role, checkedKeys } = this.state;\r\n    //如果角色列表为空则返回空\r\n    if (roles.length <= 0) {\r\n      return null;\r\n    }\r\n    //console.log(roles)\r\n    //Card标题\r\n    const title = (\r\n      <span>\r\n        <Button type=\"primary\" onClick={this.showAddModal}>\r\n          创建角色\r\n        </Button>{\" \"}\r\n        &nbsp;&nbsp;&nbsp;\r\n        <Button onClick={this.showAuthModal} disabled={!role._id}>\r\n          设置角色权限\r\n        </Button>\r\n      </span>\r\n    );\r\n    return (\r\n      <Card title={title}>\r\n        <Table\r\n          rowKey=\"_id\"\r\n          loading={this.state.loading}\r\n          dataSource={roles}\r\n          columns={this.columns}\r\n          onRow={this.onRow}\r\n          rowSelection={{ type: \"radio\", selectedRowKeys: [role._id] }}\r\n          pagination={{ defaultPageSize: PAGESIZE }}\r\n        />\r\n\r\n        {/* 添加角色Modal */}\r\n        <Modal\r\n          title=\"添加角色\"\r\n          visible={this.state.AddVisible}\r\n          onOk={this.handleAddRole}\r\n          onCancel={this.handleCancel}\r\n          cancelText=\"关闭\"\r\n          okText=\"添加\"\r\n        >\r\n          <span>角色名：</span>\r\n          <Input\r\n            style={{ width: \"80%\" }}\r\n            value={this.state.roleNameValue}\r\n            onChange={this.roleNameInput}\r\n          />\r\n        </Modal>\r\n\r\n        {/* 修改角色权限Modal */}\r\n        <Modal\r\n          title=\"角色权限修改\"\r\n          visible={this.state.AuthVisible}\r\n          onOk={this.handleAuthRole}\r\n          onCancel={this.handleAuthCancel}\r\n          cancelText=\"关闭\"\r\n          okText=\"修改权限\"\r\n        >\r\n          <span>角色名：</span>\r\n          <Input\r\n            style={{ width: \"80%\" }}\r\n            value={this.state.role.name}\r\n            disabled\r\n          />\r\n          <Tree\r\n            checkable\r\n            defaultExpandAll\r\n            checkedKeys={checkedKeys}\r\n            onCheck={this.onCheck}\r\n          >\r\n            <TreeNode title=\"权限管理\" key=\"all\">\r\n              {this.treeNodes}\r\n            </TreeNode>\r\n          </Tree>\r\n        </Modal>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\nexport default connect(state => ({ roles: state.roles, user: state.user }), {\r\n  getRoleList,    //获取角色列表\r\n  getAddRoleStatus,     //获取添加角色\r\n  getUpdateRoleAuthStatus\r\n})(Role);\r\n","import React, { Component } from \"react\";\r\nimport { Card, Table, Button, Modal, Form, Input, Select } from \"antd\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  getRoleList,\r\n  getUserList,\r\n  getAddOrUpdateStatus,\r\n  getDelUserStatus\r\n} from \"../../redux/action\";\r\nimport LinkButton from \"../../components/link-button/link-button\";\r\nimport { formateDate } from \"../../utils/index.js\";\r\nimport { PAGESIZE } from \"../../utils/constants\";\r\nimport './index.less'\r\nconst Item = Form.Item;\r\n//角色路由\r\nclass User extends Component {\r\n  state = {\r\n    addupdatevisible: false,\r\n    delvisible:false\r\n  };\r\n  UNSAFE_componentWillMount() {\r\n    this.columns = [\r\n      {\r\n        title: \"用户Id\",\r\n        dataIndex: \"_id\",\r\n        className:'hidden_lie'\r\n      },\r\n      {\r\n        title: \"用户名\",\r\n        dataIndex: \"username\"\r\n      },\r\n      {\r\n        title: \"邮箱\",\r\n        dataIndex: \"email\"\r\n      },\r\n      {\r\n        title: \"电话\",\r\n        dataIndex: \"phone\"\r\n      },\r\n      {\r\n        title: \"注册时间\",\r\n        dataIndex: \"create_time\",\r\n        render: create_time => formateDate(create_time)\r\n      },\r\n      {\r\n        title: \"所属角色\",\r\n        dataIndex: \"role_id\",\r\n        render: role_id => {\r\n          const { roles } = this.props.users;\r\n          //找到与role_id相匹配的role\r\n          const roleName = roles.find(role => role._id === role_id);\r\n          //返回出去role的名字\r\n          return roleName === undefined ? \"\" : roleName.name;\r\n        }\r\n      },\r\n      {\r\n        title: \"操作\",\r\n        render: rowData => (\r\n          <span>\r\n            <LinkButton onClick={() => this.handleUpdateBtn(rowData)}>\r\n              修改\r\n            </LinkButton>\r\n            <LinkButton onClick={() => this.handleDeleteBtn(rowData)}>删除</LinkButton>\r\n          </span>\r\n        )\r\n      }\r\n    ];\r\n    this.rowData = {};\r\n  }\r\n  componentDidMount() {\r\n    this.props.getUserList();\r\n    this.props.getRoleList();\r\n  }\r\n  //点击添加按钮\r\n  handleAddBtn = () => {\r\n    this.isAddOrUpdate = true;\r\n    this.rowData = {};\r\n    this.setState({ addupdatevisible: true });\r\n  };\r\n  //点击更新按钮\r\n  handleUpdateBtn = rowData => {\r\n    this.isAddOrUpdate = false;\r\n    this.setState({ addupdatevisible: true });\r\n    console.log(rowData);\r\n    this.rowData = rowData;\r\n  };\r\n  //点击删除按钮\r\n  handleDeleteBtn = rowData => {\r\n    \r\n    this.setState({ delvisible: true });\r\n    this.rowData = rowData;\r\n    console.log(rowData);\r\n  };\r\n\r\n  //更新或删除用户\r\n  AddOrUpdateUser = e => {\r\n    e.preventDefault();\r\n    this.props.form.validateFields((err, values) => {\r\n      if (!err) {\r\n        let user = values;\r\n        user._id = this.rowData._id;\r\n        this.props.getAddOrUpdateStatus(user);\r\n        this.setState({ addupdatevisible: false });\r\n        this.props.form.resetFields();\r\n      }\r\n    });\r\n  };\r\n  //删除用户\r\n  deleteUser = () => {\r\n    const _id = this.rowData._id;\r\n    this.props.getDelUserStatus(_id)\r\n    this.setState({delvisible:false})\r\n  }\r\n  getRoleList = roles => {\r\n    return roles.map(role => (\r\n      <Select.Option key={role._id} value={role._id}>\r\n        {role.name}\r\n      </Select.Option>\r\n    ));\r\n  };\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n    const formItemLayout = {\r\n      labelCol: { span: 5 },\r\n      wrapperCol: { span: 16 }\r\n    };\r\n    const { roles, users } = this.props;\r\n    return (\r\n      <Card\r\n        title={\r\n          <Button onClick={this.handleAddBtn} type=\"primary\">\r\n            创建用户\r\n          </Button>\r\n        }\r\n      >\r\n        <Table\r\n          dataSource={users.users}\r\n          columns={this.columns}\r\n          rowKey=\"_id\"\r\n          pagination={{ defaultPageSize: PAGESIZE }}\r\n        />\r\n        <Modal\r\n          title=\"Basic Modal\"\r\n          visible={this.state.addupdatevisible}\r\n          onOk={this.AddOrUpdateUser}\r\n          onCancel={() => this.setState({ addupdatevisible: false })}\r\n          okText={this.isAddOrUpdate === true ? '添加' :'更新'}\r\n          cancelText = \"取消\"\r\n        >\r\n          <Form {...formItemLayout}>\r\n            <Item label=\"用户名\">\r\n              {getFieldDecorator(\"username\", {\r\n                initialValue: this.rowData.username,\r\n                rules: [{ required: true, message: \"必须填入用户名\" }]\r\n              })(<Input placeholder=\"请输入用户名\" />)}\r\n            </Item>\r\n\r\n            {this.isAddOrUpdate === true ? (\r\n              <Item label=\"密码\">\r\n                {getFieldDecorator(\"password\", {\r\n                  rules: [{ required: true, message: \"必须填入密码\" }]\r\n                })(<Input placeholder=\"请输入密码\" />)}\r\n              </Item>\r\n            ) : null}\r\n\r\n            <Item label=\"手机号\">\r\n              {getFieldDecorator(\"phone\", {\r\n                initialValue: this.rowData.phone,\r\n                rules: [\r\n                  { required: true, message: \"必须填入用户名\" },\r\n                  { len: 11, message: \"手机号必须为11位\" }\r\n                ]\r\n              })(<Input placeholder=\"请输入手机号\" />)}\r\n            </Item>\r\n\r\n            <Item label=\"邮箱\">\r\n              {getFieldDecorator(\"email\", {\r\n                initialValue: this.rowData.email,\r\n                rules: [{ required: true, message: \"必须填入用户名\" }]\r\n              })(<Input placeholder=\"请输入邮箱\" />)}\r\n            </Item>\r\n\r\n            <Item label=\"所属角色\">\r\n              {getFieldDecorator(\"role_id\", {\r\n                initialValue: this.rowData.role_id || \"请选择所属角色\",\r\n                rules: [{ required: true, message: \"必须选择用户名\" }]\r\n              })(<Select>{this.getRoleList(roles)}</Select>)}\r\n            </Item>\r\n          </Form>\r\n        </Modal>\r\n        <Modal\r\n          title=\"Basic Modal\"\r\n          visible={this.state.delvisible}\r\n          onOk={this.deleteUser}\r\n          onCancel={() => this.setState({ delvisible: false })}\r\n          okText=\"删除\"\r\n          cancelText = \"取消\"\r\n        >是否删除</Modal>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\nexport default connect(state => ({ roles: state.roles, users: state.users }), {\r\n  getRoleList,\r\n  getUserList,\r\n  getAddOrUpdateStatus,\r\n  getDelUserStatus\r\n})(Form.create()(User));\r\n","import React, { Component } from \"react\";\r\nimport { Form, Input, Select } from \"antd\";\r\nimport { connect } from \"react-redux\";\r\nimport { getCategories, getaddCategory } from \"../../redux/action\";\r\nconst { Item } = Form;\r\nconst { Option } = Select;\r\nclass AddCategory extends Component {\r\n  getItemsValue = () => {\r\n    //3、自定义方法，用来传递数据（需要在父组件中调用获取数据）\r\n    const values = this.props.form.getFieldsValue(); //4、getFieldsValue：获取一组输入控件的值，如不传入参数，则获取全部组件的值\r\n    return values;\r\n  };\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n    const { categories } = this.props;\r\n\r\n    return (\r\n      <Form>\r\n        <Item>\r\n          {getFieldDecorator(\"parentId\", {\r\n            initialValue: this.props.parentId\r\n          })(\r\n            <Select>\r\n              <Option value={this.props.parentId}>\r\n                {this.props.parentName}\r\n              </Option>\r\n              {categories.map(item => (\r\n                <Option key={item._id} value={item._id}>\r\n                  {item.name}\r\n                </Option>\r\n              ))}\r\n            </Select>\r\n          )}\r\n        </Item>\r\n        <Item>\r\n          {getFieldDecorator(\"categoryName\", {\r\n            initialValue: \"\",\r\n            \r\n          })(<Input placeholder=\"请输入分类名称\" />)}\r\n        </Item>\r\n       \r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nconst WrappedAddCategory = Form.create()(AddCategory);\r\nexport default connect(state => ({ categories: state.categories }), {\r\n  getCategories,\r\n  getaddCategory\r\n})(WrappedAddCategory);\r\n","import React, { Component } from \"react\";\r\nimport { Form, Input } from \"antd\";\r\nconst {Item } = Form;\r\n\r\nclass UpdateCategory extends Component {\r\n  getItemsValue = () => {\r\n    //3、自定义方法，用来传递数据（需要在父组件中调用获取数据）\r\n    const values = this.props.form.getFieldsValue(); //4、getFieldsValue：获取一组输入控件的值，如不传入参数，则获取全部组件的值\r\n    return values;\r\n  };\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n    return (\r\n      <Form>\r\n       \r\n        <Item>\r\n          {getFieldDecorator(\"categoryName\", {\r\n            initialValue: \"\"\r\n          })(<Input placeholder=\"请输入分类名称\" />)}\r\n        </Item>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form.create()(UpdateCategory);\r\n","import React, { Component } from \"react\";\r\nimport { Card, Table, Button, Icon, Modal } from \"antd\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { getCategories, getaddCategory,getUpdateCategory } from \"../../redux/action\";\r\nimport LinkButton from \"../../components/link-button/link-button\";\r\nimport AddCategory from \"./addcategory\";\r\nimport UpdateCategory from \"./updatecategory\";\r\n\r\n//商品分类\r\nclass Category extends Component {\r\n  state = {\r\n    //关闭modal对话框属性\r\n    showModal: 0\r\n  };\r\n  //初始化表格\r\n  UNSAFE_componentWillMount() {\r\n    this.columns = [\r\n      {\r\n        title: \"分类名称\",\r\n        dataIndex: \"name\",\r\n        width: \"65%\"\r\n      },\r\n      {\r\n        title: \"操作\",\r\n        render: rowData => (\r\n          <span>\r\n            <LinkButton onClick={() => {this.showUpdateCategory(rowData)}}>修改分类</LinkButton>\r\n            {/* 如何向事件回调函数传递参数:先定义一个匿名函数，在函数里面调用处理函数并传入参数 */}\r\n            <LinkButton\r\n              onClick={() => {\r\n                this.getSubcategory(rowData);\r\n              }}\r\n            >\r\n              查看子分类\r\n            </LinkButton>\r\n          </span>\r\n        )\r\n      }\r\n    ];\r\n    this.loading = false;\r\n  }\r\n  //显示一级分类\r\n  componentDidMount() {\r\n    this.parentId = \"0\";\r\n    //调用action来获取分类数组数据\r\n    this.props.getCategories(this.parentId);\r\n    this.parentName = \"总分类\";\r\n  }\r\n\r\n  render() {\r\n    //debugger\r\n    //从redux取出categories数据 数据结构:[{},{},{}]\r\n    const { categories } = this.props;\r\n\r\n    //Card左边的标题\r\n    const title =\r\n      this.parentId === \"0\" ? (this.parentName = \"总分类\") : this.parentName;\r\n    //卡片右侧区域\r\n    const extra = (\r\n      <span>\r\n        {/* 如果当前页面parentId不为零则显示“返回总分类”按钮 */}\r\n        {this.parentId !== \"0\" ? (\r\n          <Button\r\n            onClick={() => this.props.getCategories((this.parentId = \"0\"))}\r\n            type=\"default\"\r\n          >\r\n            <Icon type=\"rollback\" />\r\n            返回总分类\r\n          </Button>\r\n        ) : null}\r\n        　　\r\n        <Button type=\"primary\" onClick={this.showAddCategory}>\r\n          <Icon type=\"plus\" />\r\n          添加\r\n        </Button>\r\n      </span>\r\n    );\r\n    //如果categories没有值则显示loading\r\n    if (!categories[0]) {\r\n      this.loading = true;\r\n    } else {\r\n      this.loading = false;\r\n    }\r\n    const dataSource = categories;\r\n    //console.log(this.form);\r\n\r\n    return (\r\n      <Card title={title} extra={extra} style={{ width: \"100%\" }}>\r\n        <Table\r\n          dataSource={dataSource}\r\n          columns={this.columns}\r\n          bordered={true}\r\n          rowKey=\"_id\"\r\n          pagination={{ defaultPageSize: 7, showQuickJumper: true }}\r\n          loading={this.loading}\r\n          defaultSortOrder=\"descend\"\r\n        />\r\n        <Modal\r\n          title=\"添加商品\"\r\n          visible={this.state.showModal === 1}\r\n          centered={true}\r\n          onOk={this.handleCreate}\r\n          onCancel={this.handleCancel}\r\n        >\r\n          <AddCategory\r\n            parentId={this.parentId}\r\n            parentName={this.parentName}\r\n            addCategory={this.addCategory}\r\n            wrappedComponentRef={form => (this.formRef = form)}\r\n          />\r\n        </Modal>\r\n        <Modal\r\n          title=\"修改分类\"\r\n          visible={this.state.showModal === 2}\r\n          onOk={this.handleUpdate}\r\n          onCancel={this.handleCancel}\r\n          \r\n        >\r\n          <UpdateCategory  wrappedComponentRef={form => (this.formRef = form)}/>\r\n        </Modal>\r\n      </Card>\r\n    );\r\n  }\r\n  //获取Table每行分类的parentId,这里的rowData详情转到(UNSAFE_componentWillMount)里面查看\r\n  getSubcategory = rowData => {\r\n    /* \r\n        rowData的返回值\r\n        parentId: \"0\"\r\n        _id: \"5e0c0e206f3ce12cb090b20d\"\r\n        name: \"玩具\"\r\n        __v: 0 \r\n    */\r\n    //获取当前行分类_id\r\n    const parentId = rowData._id;\r\n    //将行_id赋值给当前组件parentId\r\n    this.parentId = parentId;\r\n    //将行分类名赋值给当前组件parentName\r\n    this.parentName = rowData.name;\r\n    //console.log(parentId);\r\n    //然后调用异步action\r\n    this.props.getCategories(parentId);\r\n  };\r\n  //关闭当前Modal对话框\r\n  handleCancel = () => {\r\n    this.setState({ showModal: 0 });\r\n  };\r\n  //显示添加分类Modal对话框('修改分类'按钮事件)\r\n  showAddCategory = () => {\r\n    this.setState({ showModal: 1 });\r\n    console.log(this.form);\r\n  };\r\n  //显示修改分类Modal对话框;('添加'按钮事件)\r\n  showUpdateCategory = (rowData) => {\r\n    //console.log(rowData);\r\n    this.categoryId = rowData._id\r\n    this.setState({ showModal: 2 });\r\n  };\r\n\r\n  //添加分类Modal对话框OK按钮，添加商品功能函数\r\n  handleCreate = () => {\r\n    //debugger\r\n\r\n    const values = this.formRef.getItemsValue();\r\n    //console.log(this.formRef);\r\n    this.props.getaddCategory(values); //6、调用子组件的自定义方法getItemsValue。注意：通过  this.formRef 才能拿到数据\r\n    this.props.getCategories(this.parentId);\r\n    this.formRef.props.form.resetFields();\r\n    this.setState({ showModal: 0 });\r\n  };\r\n  handleUpdate = () => {\r\n    const values = this.formRef.getItemsValue();\r\n    const {categoryName} = values\r\n    const {categoryId} = this\r\n    //console.log(categoryName);\r\n    this.props.getUpdateCategory({categoryId,categoryName})\r\n    this.props.getCategories(this.parentId)\r\n    //console.log(categoryId);\r\n    this.setState({showModal:0})\r\n  }\r\n}\r\nexport default connect(\r\n  state => ({\r\n    categories: state.categories,\r\n  }),\r\n  {\r\n    getCategories,\r\n    getaddCategory,\r\n    getUpdateCategory\r\n  }\r\n)(Category);\r\n","import React, { Component } from \"react\";\r\nimport { Layout, message } from \"antd\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect, Switch, Route } from \"react-router-dom\";\r\nimport Cookies from \"js-cookie\";\r\n\r\nimport { getUserMessage} from \"../../redux/action\";\r\nimport LeftNav from \"../../components/left-nav/left-nav\";\r\nimport Head from \"../../components/header/header\";\r\nimport \"./index.less\";\r\nimport Home from \"../home/home\";\r\nimport Bar from \"../chats/bar\";\r\nimport Line from \"../chats/line\";\r\nimport Pie from \"../chats/pie\";\r\nimport Product from \"../product/product\";\r\nimport Role from \"../role/role\";\r\nimport User from \"../user/user\";\r\nimport Category from \"../category/category\";\r\n\r\nconst { Content, Footer } = Layout;\r\nclass Admin extends Component {\r\n  UNSAFE_componentWillMount() {\r\n    const userid = Cookies.get(\"userid\");\r\n    if (userid) {\r\n      this.props.getUserMessage();\r\n    }\r\n    //this.props.getWeather();\r\n  }\r\n  componentDidMount() {\r\n    const { user } = this.props;\r\n    if (user) {\r\n      message.success(\"登录成功\");\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const userid = Cookies.get(\"userid\");\r\n    if (!userid) {\r\n      return <Redirect to=\"/login\" />;\r\n    }\r\n    const { user, weather } = this.props;\r\n    //console.log(weather);\r\n\r\n    const username = user.username;\r\n    //console.log(username);\r\n\r\n    return (\r\n      <Layout style={{ minHeight: \"100vh\" }}>\r\n        <LeftNav />\r\n        <Layout>\r\n          <Head username={username} weather={weather} />\r\n          <Content style={{ margin: \"0 16px\" }}>\r\n            {/* <Breadcrumb style={{ margin: '16px 0' }}>\r\n                    <Breadcrumb.Item>User</Breadcrumb.Item>\r\n                    <Breadcrumb.Item>Bill</Breadcrumb.Item>\r\n                  </Breadcrumb> */}\r\n            <div style={{ padding: 24, background: \"#fff\", minHeight: 360 }}>\r\n              <Switch>\r\n                <Route path=\"/home\" component={Home} />\r\n                <Route path=\"/category\" component={Category} />\r\n                <Route path=\"/product\" component={Product} />\r\n                <Route path=\"/role\" component={Role} />\r\n                <Route path=\"/user\" component={User} />\r\n                <Route path=\"/charts/bar\" component={Bar} />\r\n                <Route path=\"/charts/line\" component={Line} />\r\n                <Route path=\"/charts/pie\" component={Pie} />\r\n                <Redirect to=\"home\" />\r\n              </Switch>\r\n            </div>\r\n          </Content>\r\n          <Footer style={{ textAlign: \"center\" }}>\r\n            Lychee Backstage ©2020 Created by cth\r\n          </Footer>\r\n        </Layout>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\nexport default connect(\r\n  state => ({ user: state.user}),\r\n  { getUserMessage}\r\n)(Admin);\r\n","import { combineReducers } from \"redux\";\r\n\r\nimport {\r\n  AUTH_SUCCESS,\r\n  ERROR_MSG,\r\n  RECEIVE_USER,\r\n  RESET_USER,\r\n  RECEIVE_WHEATHER,\r\n  RECEIVE_CATEGORYS,\r\n  ADDCATEGORY_SUCCESS,\r\n  UPDATECATEGORY_SUCCESS,\r\n  RECEIVE_PRODUCTS,\r\n  ADDPRODUCT_SUCCESS,\r\n  UPDATEPRODUCT_SUCCESS,\r\n  RECEIVE_ROLE_LIST,\r\n  RECEIVE_USER_LIST\r\n} from \"./actions-type\";\r\n\r\nfunction user(state = 0, action) {\r\n  switch (action.type) {\r\n    case AUTH_SUCCESS:\r\n      return { ...action.data, path: \"/\" };\r\n    case ERROR_MSG:\r\n      return { ...action.data };\r\n    case RECEIVE_USER:\r\n      return { ...action.data };\r\n    case RESET_USER:\r\n      return action.data;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nfunction weather(state = 0, action) {\r\n  switch (action.type) {\r\n    case RECEIVE_WHEATHER:\r\n      return { ...action.data };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nfunction categories(state = [], action) {\r\n  switch (action.type) {\r\n    case RECEIVE_CATEGORYS:\r\n      return action.data;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\nfunction addsuccessmsg(state = 1, action) {\r\n  switch (action.type) {\r\n    case ADDCATEGORY_SUCCESS:\r\n      return action.data;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\nfunction updatesuccessmsg(state = 1, action) {\r\n  switch (action.type) {\r\n    case UPDATECATEGORY_SUCCESS:\r\n      return action.data;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\nconst initproducts = {\r\n  status: 1,\r\n  data: {\r\n    pageNum: null,\r\n    total: null,\r\n    pages: null,\r\n    pageSize: null,\r\n    list: []\r\n  }\r\n};\r\nfunction products(state = initproducts, action) {\r\n  switch (action.type) {\r\n    case RECEIVE_PRODUCTS:\r\n      return { ...action.data };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\nfunction productStatus(state = 1, action) {\r\n  switch (action.type) {\r\n    case ADDPRODUCT_SUCCESS:\r\n      return action.data;\r\n    case UPDATEPRODUCT_SUCCESS:\r\n      return action.data;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nfunction roles(state=[],action){\r\n  switch (action.type) {\r\n    case RECEIVE_ROLE_LIST:\r\n      return action.data\r\n    default:\r\n      return state\r\n  }\r\n}\r\nfunction users(state = {}, action) {\r\n  switch (action.type) {\r\n    case RECEIVE_USER_LIST:\r\n      return action.data;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\nexport default combineReducers({\r\n  user,    //用户\r\n  weather,    //天气\r\n  categories,    //分类列表\r\n  addsuccessmsg,    //添加分类成功消息\r\n  updatesuccessmsg,    //更新分类成功消息\r\n  products,   //商品列表\r\n  productStatus,    //商品上架/下架状态\r\n  roles,    //角色列表\r\n  users    //用户列表\r\n});\r\n","import {createStore,applyMiddleware} from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport {composeWithDevTools} from 'redux-devtools-extension'\r\n\r\nimport reducers from './reducers'\r\n\r\nexport default createStore(reducers,composeWithDevTools(applyMiddleware(thunk)))","import React ,{Component} from 'react'\r\nimport {BrowserRouter,Route,Switch,} from 'react-router-dom'\r\nimport {Provider} from 'react-redux'\r\n\r\nimport Login from './containers/login/login'\r\nimport Admin from  './containers/admin/admin'\r\nimport store from './redux/store'\r\n\r\nexport default class App extends Component{\r\n    render(){\r\n        return(\r\n            <Provider store={store}>\r\n            <BrowserRouter>\r\n                <Switch>\r\n                    <Route path='/login' component={Login}></Route>\r\n                    <Route path='/admin' component={Admin}></Route>\r\n                    <Route component={Admin} />\r\n                </Switch>\r\n            </BrowserRouter>\r\n        </Provider>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App'\r\nReactDOM.render(<App/>,document.getElementById('root'))\r\n\r\n\r\n"],"sourceRoot":""}